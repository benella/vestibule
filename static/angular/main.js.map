{"version":3,"sources":["./src/app/shared/loading-button/loading-button.component.ts","./src/app/shared/loading-button/loading-button.component.html","./src/app/shared/loading-button/loading-button-status.ts","./src/app/shows/show-torrents/show-torrents.component.ts","./src/app/shows/show-torrents/show-torrents.component.html","./src/app/shows/shows-list.component.ts","./src/app/shows/shows-list.component.html","./src/app/shows/show-torrents/show-torrent/show-torrent.component.ts","./src/app/shows/show-torrents/show-torrent/show-torrent.component.html","./src/app/panel/services-status/services-status.service.ts","./src/app/panel/panel.component.ts","./src/app/panel/panel.component.html","./src/app/shows/show-profile/show-profile.component.ts","./src/app/shows/show-profile/show-profile.component.html","./src/app/shows/shows.service.ts","./src/app/shows/poster-strip/poster-strip.component.ts","./src/app/shows/poster-strip/poster-strip.component.html","./src/environments/environment.ts","./src/app/shows/show-details-tabs/show-details-tabs.component.ts","./src/app/shows/show-details-tabs/show-details-tabs.component.html","./src/app/panel/panel-background/panel-background.service.ts","./src/app/shows/shows.module.ts","./src/app/shared/shared.module.ts","./src/app/shows/show-details-tab/show-details-tab.component.ts","./src/app/shows/show-details-tab/show-details-tab.component.html","./src/app/shows/show-details.component.ts","./src/app/shows/show-details.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/pipes/plural-pipe.pipe.ts","./src/app/app.module.ts","./src/app/panel/services-status/services-status.component.ts","./src/app/panel/services-status/services-status.component.html","./src/app/shows/shows-routing.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/app/shows/show-torrents/show-torrents-section/show-torrents-section.component.ts","./src/app/shows/show-torrents/show-torrents-section/show-torrents-section.component.html"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'vestibule-loading-button',\n  templateUrl: './loading-button.component.html',\n  styleUrls: ['./loading-button.component.scss']\n})\nexport class LoadingButtonComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"button-title\">\n  <ng-content></ng-content>\n</div>\n","export class LoadingButtonStatus {\n  public static readonly idle = ''\n  public static readonly loading = 'loading'\n  public static readonly error = 'error'\n  public static readonly confirm = 'confirm'\n}\n","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport { ShowsService } from \"../shows.service\";\nimport {Season, Episode, ShowTorrents, ShowDetails} from \"../show\";\nimport {Observable, Subscription} from \"rxjs\";\n\nclass EpisodeStatusColors {\n  public static SKIP = '#c78415'\n  public static SHOULD_DOWNLOAD = '#0071bc'\n  public static DOWNLOADED = '#50ad6f'\n  public static NOT_AIRED = '#8241d8'\n}\n\n@Component({\n  selector: 'vestibule-show-torrents',\n  templateUrl: './show-torrents.component.html',\n  styleUrls: ['./show-torrents.component.scss']\n})\nexport class ShowTorrentsComponent implements OnInit, OnDestroy {\n  @Input() show: ShowDetails\n  @Input() showUpdated$: Observable<void>\n\n  private showUpdatedSubscription: Subscription\n\n  seasons: ShowTorrents\n  selectedSeason: Season\n  selectedEpisode: Episode\n\n  constructor(private showsService: ShowsService) { }\n\n  ngOnInit(): void {\n    this.updateShowTorrents()\n    this.showUpdatedSubscription = this.showUpdated$.subscribe(() => this.updateShowTorrents())\n  }\n\n  updateShowTorrents(): void {\n    this.showsService.listShowTorrents(this.show.imdb_id)\n      .subscribe(data => {\n        this.seasons = data\n\n        if (this.seasons.seasons.length) {\n          this.selectedSeason = this.seasons.seasons[0]\n\n          if (this.selectedSeason.episodes.length) {\n            this.selectedEpisode = this.selectedSeason.episodes[0]\n          }\n        }\n      })\n  }\n\n  episodeStatusBulletColor(episode: Episode): string {\n    if (episode.is_downloaded) {\n      return EpisodeStatusColors.DOWNLOADED\n    }\n\n    if (!episode.should_download) {\n      return EpisodeStatusColors.SKIP\n    }\n\n    return episode.is_aired ? EpisodeStatusColors.SHOULD_DOWNLOAD : EpisodeStatusColors.NOT_AIRED\n  }\n\n  episodeStatusText(episode: Episode): string {\n    if (episode.is_downloaded) {\n      return 'Downloaded'\n    }\n\n    if (!episode.should_download) {\n      return 'Skip'\n    }\n\n    return episode.is_aired ? 'Should Download' : 'Not Aired Yet'\n  }\n\n  chooseEpisode(season: Season, episode: Episode): void {\n    this.selectedSeason = season\n    this.selectedEpisode = episode\n  }\n\n  showNoTorrentsMessage(): boolean {\n    return !this.selectedSeason.season_matching_torrents.length &&\n      !this.selectedSeason.season_unmatching_torrents.length &&\n      !this.selectedEpisode.matching_torrents.length &&\n      !this.selectedEpisode.unmatching_torrents.length\n  }\n\n  ngOnDestroy() {\n    this.showUpdatedSubscription.unsubscribe()\n  }\n}\n","<ng-container *ngIf=\"seasons\">\n  <div id=\"show-torrents-cont\">\n    <section id=\"show-seasons-menu\">\n      <div *ngFor=\"let season of seasons.seasons\"\n           class=\"season-cont\"\n           [class.selected-season]=\"season.id === selectedSeason.id\">\n        <div class=\"season-episodes-list\">\n          <div *ngFor=\"let episode of season.episodes\"\n               class=\"episode-block-cont\"\n               [class.selected-episode]=\"episode.id === selectedEpisode.id\"\n               (click)=\"chooseEpisode(season, episode)\">\n              <div class=\"episode-block-number\">\n                <p >{{episode.number}}</p>\n              </div>\n              <div class=\"episode-block\" [style.backgroundColor]=\"episodeStatusBulletColor(episode)\"></div>\n          </div>\n        </div>\n\n        <div class=\"season-title-cont\">\n          <p class=\"season-title\">{{season.title}}</p>\n        </div>\n\n      </div>\n    </section>\n\n    <section id=\"episode-details-cont\">\n      <div class=\"episode-details-header\">\n        <p class=\"episode-details-title\">{{selectedEpisode.title}}</p>\n        <p class=\"episode-details-subtitle-info\">\n          <span>{{selectedSeason.title}}</span>\n          <span>&nbsp; &mdash; &nbsp;</span>\n          <span>E{{selectedEpisode.number}}</span>\n          <span>&nbsp; &mdash; &nbsp;</span>\n          <span>{{selectedEpisode.air_status}}</span>\n        </p>\n      </div>\n\n      <div class=\"episode-download-status-cont\">\n        <div class=\"episode-download-status\" [style.color]=\"episodeStatusBulletColor(selectedEpisode)\">\n          <span class=\"episode-status-bullet\" [style.backgroundColor]=\"episodeStatusBulletColor(selectedEpisode)\"></span>\n          <span>{{episodeStatusText(selectedEpisode)}}</span>\n        </div>\n\n        <div class=\"episode-download-status-actions\">\n          <div class=\"episode-download-status-action\">\n            <span>Skip this Episode</span>\n          </div>\n\n          <div class=\"episode-download-status-action\">\n            <span>Skip this Season</span>\n          </div>\n\n          <div class=\"episode-download-status-action\">\n            <span>Download Best Match</span>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"episode-torrents-list\">\n        <p *ngIf=\"showNoTorrentsMessage() else hasTorrents\" class=\"no-torrents-found-message\">No torrents found for this Episode yet</p>\n\n        <ng-template #hasTorrents>\n          <vestibule-show-torrents-section\n            [title]=\"'Profile Matching Episode Torrents'\"\n            [torrents]=\"selectedEpisode.matching_torrents\"\n            [episode]=\"selectedEpisode\"\n            [season]=\"selectedSeason\"\n            [show]=\"show\"\n            [defaultOpen]=\"true\"\n            [matchingTorrents]=\"true\"\n          ></vestibule-show-torrents-section>\n\n          <vestibule-show-torrents-section\n            [title]=\"'Profile Matching Season Torrents'\"\n            [torrents]=\"selectedSeason.season_matching_torrents\"\n            [season]=\"selectedSeason\"\n            [show]=\"show\"\n            [defaultOpen]=\"true\"\n            [matchingTorrents]=\"true\"\n          ></vestibule-show-torrents-section>\n\n          <vestibule-show-torrents-section\n            [title]=\"'Episode Torrents (Not Matching Profile)'\"\n            [torrents]=\"selectedEpisode.unmatching_torrents\"\n            [episode]=\"selectedEpisode\"\n            [season]=\"selectedSeason\"\n            [show]=\"show\"\n            [matchingTorrents]=\"false\"\n          ></vestibule-show-torrents-section>\n\n          <vestibule-show-torrents-section\n            [title]=\"'Season Torrents (Not Matching Profile)'\"\n            [torrents]=\"selectedSeason.season_unmatching_torrents\"\n            [season]=\"selectedSeason\"\n            [show]=\"show\"\n            [matchingTorrents]=\"false\"\n          ></vestibule-show-torrents-section>\n        </ng-template>\n\n      </div>\n    </section>\n  </div>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { ShowsService } from \"./shows.service\";\nimport { ShowInList } from \"./show\";\n\n@Component({\n  selector: 'vestibule-shows-list',\n  templateUrl: './shows-list.component.html',\n  styleUrls: ['./shows-list.component.scss']\n})\nexport class ShowsListComponent implements OnInit {\n  shows: ShowInList[]\n  showsByStatus: { [status: string] : ShowInList[] }\n  constructor(private showsService: ShowsService) { }\n\n  ngOnInit(): void {\n    this.showsService.listShows().subscribe(\n      data => {\n        this.shows = data\n      }\n    )\n  }\n\n}\n","<section id=\"show-list\">\n\n    <a *ngFor=\"let show of shows\" [routerLink]=\"['/shows', show.imdb_id]\"><div class=\"show\">\n        <p class=\"show-title\">{{ show.title }}</p>\n        <vestibule-poster-strip [paletteList]=\"show.palette_list\"></vestibule-poster-strip>\n    </div></a>\n\n</section>\n","import { Component, Input, OnInit } from '@angular/core';\nimport {ShowDetails, Torrent, Season, Episode} from \"../../show\";\n\nclass TorrentDownloadStatus {\n  public static NEVER_STARTED = 'Never Started'\n  public static DOWNLOADING = 'Downloading'\n  public static READY = 'Ready'\n  public static STOPPED = 'Stopped'\n}\n\n@Component({\n  selector: 'vestibule-show-torrent',\n  templateUrl: './show-torrent.component.html',\n  styleUrls: ['./show-torrent.component.scss']\n})\nexport class ShowTorrentComponent implements OnInit {\n  @Input() torrent: Torrent\n  @Input() show: ShowDetails\n  @Input() season: Season\n  @Input() episode?: Episode\n\n  moreDetailsMode = false\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  toggleMoreDetails(): void {\n    this.moreDetailsMode = !this.moreDetailsMode\n  }\n\n  showDownloadStatus(): boolean {\n    return this.torrent.download_status && this.torrent.download_status != TorrentDownloadStatus.NEVER_STARTED\n  }\n\n}\n","<div class=\"torrent-cont\">\n  <div class=\"torrent-title-cont\">\n    <p>\n      <span class=\"torrent-title\">{{show.title}} S{{season.number}}<span *ngIf=\"episode\"> E{{episode.number}}</span></span>\n      <span class=\"torrent-publication-time\">{{torrent.publication_time}}</span>\n    </p>\n  </div>\n\n  <div class=\"torrent-details-cont\">\n    <div class=\"torrent-actions-cont\">\n      <div class=\"torrent-action action-download\">\n        <img src=\"/static/images/download_icon.svg\">\n      </div>\n\n      <div class=\"torrent-action action-plus\" (click)=\"toggleMoreDetails()\">\n        <img src=\"/static/images/plus_icon.svg\" [class.x-mode]=\"moreDetailsMode\">\n      </div>\n    </div>\n\n    <div class=\"torrent-info-cont\">\n      <div *ngIf=\"!moreDetailsMode else moreDetails\"\n           class=\"torrent-base-details-cont\">\n        <div class=\"torrent-tags\">\n          <div *ngIf=\"torrent.feed\" class=\"tag feed-tag\">{{torrent.feed}}</div>\n          <div *ngIf=\"torrent.quality\" class=\"tag quality-tag\">{{torrent.quality}}</div>\n          <div *ngIf=\"torrent.source_type\" class=\"tag source-type-tag\">{{torrent.source_type}}</div>\n        </div>\n      </div>\n\n      <ng-template #moreDetails>\n        <div class=\"torrent-more-details-cont\">\n          <div class=\"torrent-tags\">\n            <div *ngIf=\"torrent.link\" class=\"tag torrent-link\">\n              <a target=\"_blank\" href=\"{{torrent.link}}\">Link</a>\n            </div>\n            <div *ngIf=\"torrent.title\" class=\"tag torrent-full-name\">{{torrent.title}}</div>\n          </div>\n        </div>\n      </ng-template>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {ServiceStatus} from \"./service-status\";\nimport {Observable} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServicesStatusService {\n\n  constructor(private http: HttpClient) { }\n\n  getServicesStatus(): Observable<ServiceStatus[]> {\n    return this.http.get<ServiceStatus[]>('api/services-status')\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { PanelBackgroundService } from './panel-background/panel-background.service'\n\n@Component({\n  selector: 'vestibule-panel',\n  templateUrl: './panel.component.html',\n  styleUrls: ['./panel.component.scss']\n})\nexport class PanelComponent implements OnInit {\n  backgroundURL: string\n  defaultBackgroundURL: string\n  isDynamicVisible = false\n\n  constructor(private panelBackgroundService: PanelBackgroundService) { }\n\n  ngOnInit(): void {\n    this.defaultBackgroundURL = this.panelBackgroundService.defaultBackgroundURL\n    this.panelBackgroundService.currentBackground.subscribe(url => {\n      if (url === \"\"){\n        this.isDynamicVisible = false\n      } else {\n        this.backgroundURL = url\n        this.isDynamicVisible = true\n      }\n    })\n  }\n\n}\n","<section id=\"panel\">\n\n  <div id=\"vestibule-home\">\n    <a [routerLink]=\"'/dashboard'\" class=\"acier-title\">VESTIBULE</a>\n  </div>\n\n  <div id=\"main-links-box\">\n\n      <section class=\"side-panel-links\">\n          <a [routerLink]=\"'/shows'\" class=\"side-panel-link\">Shows</a>\n          <a href=\"/\" class=\"side-panel-link\">Feeds</a>\n          <a href=\"/\" class=\"side-panel-link\">Torrents</a>\n      </section>\n\n      <div class=\"side-panel-divider\"></div>\n\n      <section class=\"side-panel-links\">\n          <a href=\"/\" class=\"side-panel-link\">Add Show</a>\n      </section>\n\n  </div>\n\n  <vestibule-services-status></vestibule-services-status>\n\n</section>\n\n<div id=\"strip\">\n  <img alt=\"Vestibule\" class=\"strip-img\" [src]=defaultBackgroundURL crossorigin=\"anonymous\">\n  <img alt=\"Vestibule\" class=\"strip-img\" id=\"dynamic-background\"\n       [class.visible]=\"isDynamicVisible\"\n       [src]=backgroundURL\n       crossorigin=\"anonymous\"\n  >\n  <div id=\"strip-cover\"></div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ShowProfile } from \"../show\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { ShowsService } from \"../shows.service\";\n\n@Component({\n  selector: 'vestibule-show-profile',\n  templateUrl: './show-profile.component.html',\n  styleUrls: ['./show-profile.component.scss']\n})\nexport class ShowProfileComponent implements OnInit {\n  @Input() showProfile: ShowProfile\n  @Input() showImdbID: string\n  isChanged = false\n  isLoading = false\n  hasSaveError = false\n\n  profileForm = this.fb.group({\n    quality: ['', Validators.required],\n    subtitles: ['', Validators.required],\n    high_quality_source: ['', Validators.required],\n    download_automatically: ['', Validators.required],\n    wait: ['', Validators.required],\n  })\n\n  qualities = [\n    '720P',\n    '1080P',\n    '4K'\n  ]\n\n  waitTimes = [\n    {name: 'Don\\'t Wait', value: 'N'},\n    {name: 'Up to a Day', value: '1D'},\n    {name: 'Up to 2 Days', value: '2D'},\n    {name: 'Up to 3 Days', value: '3D'},\n    {name: 'Up to 4 Days', value: '4D'},\n    {name: 'Up to 5 Days', value: '5D'},\n    {name: 'Up to 6 Days', value: '6D'},\n    {name: 'Up to a Week', value: '1W'},\n    {name: 'Forever', value: 'F'},\n  ]\n\n  constructor(private fb: FormBuilder, private showsService: ShowsService) { }\n\n  ngOnInit(): void {\n    this.profileForm.setValue({\n      quality: this.showProfile.quality,\n      subtitles: this.showProfile.subtitles,\n      high_quality_source: this.showProfile.high_quality_source,\n      download_automatically: this.showProfile.download_automatically,\n      wait: this.showProfile.wait,\n    })\n\n    this.profileForm.valueChanges.subscribe(val => {\n      this.hasSaveError = false\n      this.updateIsChanged()\n    });\n  }\n\n  onSubmit() {\n    this.isLoading = true\n    this.hasSaveError = false\n\n    this.showsService.updateShowProfile(this.showImdbID, this.profileForm.value).subscribe(\n      data => {\n        this.showProfile = data\n        this.updateIsChanged()\n        this.isLoading = false\n      },\n      () => {\n        this.isLoading = false\n        this.hasSaveError = true\n      }\n    )\n  }\n\n  updateIsChanged() {\n    this.isChanged =  JSON.stringify(this.profileForm.value) !== JSON.stringify(this.showProfile)\n  }\n}\n","<form [formGroup]=\"profileForm\" (ngSubmit)=\"onSubmit()\">\n\n  <div class=\"profile-form-field\">\n    <label>\n      Preferred Video Quality\n      <span class=\"bullet\">•</span>\n      <select formControlName=\"quality\" class=\"profile-form-option-select\">\n        <option *ngFor=\"let quality of qualities\" [ngValue]=\"quality\">{{ quality }}</option>\n      </select>\n    </label>\n\n    <p class=\"profile-option-description\">\n      Should favor torrents with matching video quality (or higher if not found)\n    </p>\n  </div>\n\n  <div class=\"profile-form-field\">\n    <label>\n      Wait for Match\n      <span class=\"bullet\">•</span>\n      <select formControlName=\"wait\" class=\"profile-form-option-select\">\n        <option *ngFor=\"let waitTime of waitTimes\" [ngValue]=\"waitTime.value\">{{ waitTime.name }}</option>\n      </select>\n    </label>\n\n    <p class=\"profile-option-description\">\n      How long should the automatic download wait if no full profile match is found\n    </p>\n  </div>\n\n  <div class=\"profile-form-field\">\n    <label>\n      Download Automatically\n      <span class=\"bullet\">•</span>\n      <select formControlName=\"download_automatically\" class=\"profile-form-option-select\">\n        <option [ngValue]=true>Yes</option>\n        <option [ngValue]=false>No</option>\n      </select>\n    </label>\n\n    <p class=\"profile-option-description\">\n      Should matching episodes be downloaded automatically upon match, or wait time exhaustion\n    </p>\n  </div>\n\n  <div class=\"profile-form-field\">\n    <label>\n      Requires Subtitles\n      <span class=\"bullet\">•</span>\n      <select formControlName=\"subtitles\" class=\"profile-form-option-select\">\n        <option [ngValue]=true>Yes</option>\n        <option [ngValue]=false>No</option>\n      </select>\n    </label>\n\n    <p class=\"profile-option-description\">\n      Should favor torrents with subtitles\n    </p>\n  </div>\n\n  <div class=\"profile-form-field\">\n    <label>\n      High-Quality Sources\n      <span class=\"bullet\">•</span>\n      <select formControlName=\"high_quality_source\" class=\"profile-form-option-select\">\n        <option [ngValue]=true>Yes</option>\n        <option [ngValue]=false>No</option>\n      </select>\n    </label>\n\n    <p class=\"profile-option-description\">\n      Should favor torrents from high quality sources, like Web or BlueRay\n    </p>\n  </div>\n\n  <button\n    type=\"submit\"\n    [disabled]=\"!profileForm.valid || !profileForm.dirty || !isChanged\"\n    class=\"profile-form-submit\"\n    [ngClass]=\"{\n      'disabled': !profileForm.valid || !profileForm.dirty || !isChanged,\n      'loading': isLoading,\n      'error': hasSaveError\n    }\"\n  >Save</button>\n  <p *ngIf=\"hasSaveError\" class=\"save-error-text\">Failed to save changes</p>\n\n</form>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { ShowInList, ShowDetails, ShowProfile, ShowTorrents } from \"./show\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShowsService {\n\n  constructor(private http: HttpClient) { }\n\n  listShows(): Observable<ShowInList[]> {\n    return this.http.get<ShowInList[]>('api/shows/list')\n  }\n\n  showDetails(imdb_id: string): Observable<ShowDetails> {\n    return this.http.get<ShowDetails>(`api/shows/${imdb_id}`)\n  }\n\n  listShowTorrents(imdb_id: string): Observable<ShowTorrents> {\n    return this.http.get<ShowTorrents>(`api/shows/torrents/${imdb_id}`)\n  }\n\n  updateShowProfile(imdb_id: string, profile: ShowProfile): Observable<ShowProfile> {\n    return this.http.put<ShowProfile>(`api/shows/update_profile/${imdb_id}`, profile)\n  }\n\n  updateShowInfo(imdb_id: string): Observable<ShowDetails> {\n    return this.http.get<ShowDetails>(`api/shows/update_info/${imdb_id}`)\n  }\n\n  findShowTorrents(imdb_id: string): Observable<ShowDetails> {\n    return this.http.get<ShowDetails>(`api/shows/find_torrents/${imdb_id}`)\n  }\n\n  unsubscribeFromShow(imdb_id: string): Observable<any> {\n    return this.http.delete<any>(`api/shows/${imdb_id}`)\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'vestibule-poster-strip',\n  templateUrl: './poster-strip.component.html',\n  styleUrls: ['./poster-strip.component.scss']\n})\nexport class PosterStripComponent implements OnInit {\n  @Input() paletteList: number[][]\n  public mainColor: string\n  public secondaryColor: string\n  public thirdColor: string\n  constructor() { }\n\n  ngOnInit(): void {\n    if (this.paletteList.length) {\n      this.mainColor = `rgb(${this.paletteList[0][0]}, ${this.paletteList[0][1]}, ${this.paletteList[0][2]})`\n      this.secondaryColor = `rgb(${this.paletteList[1][0]}, ${this.paletteList[1][1]}, ${this.paletteList[1][2]})`\n      this.thirdColor = `rgb(${this.paletteList[2][0]}, ${this.paletteList[2][1]}, ${this.paletteList[2][2]})`\n    } else {\n      this.mainColor = `rgb(93, 108, 172)`\n      this.secondaryColor = `rgb(189, 76, 98)`\n      this.thirdColor = `rgb(189, 76, 98)`\n    }\n  }\n\n  stripGradientBackground(): object {\n    return {\n      background: `linear-gradient(90deg, ${this.mainColor} 0%, ${this.secondaryColor} 100%)`\n    }\n  }\n\n  stripBackground(): object {\n    return {\n      backgroundColor: this.mainColor\n    }\n  }\n}\n","<div class=\"poster-strip\" [ngStyle]=stripBackground()></div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {AfterContentInit, Component, ContentChildren, QueryList} from '@angular/core';\nimport {ShowDetailsTabComponent} from \"../show-details-tab/show-details-tab.component\";\n\n@Component({\n  selector: 'vestibule-show-details-tabs',\n  templateUrl: './show-details-tabs.component.html',\n  styleUrls: ['./show-details-tabs.component.scss']\n})\nexport class ShowDetailsTabsComponent implements AfterContentInit {\n\n  @ContentChildren(ShowDetailsTabComponent) tabs: QueryList<ShowDetailsTabComponent>;\n\n  constructor() { }\n\n  ngAfterContentInit(): void {\n    let activeTabs = this.tabs.filter((tab)=>tab.active);\n\n    if (activeTabs.length === 0) {\n      this.selectTab(this.tabs.first);\n    }\n  }\n\n  selectTab(tab: ShowDetailsTabComponent){\n    this.tabs.toArray().forEach(tab => tab.active = false);\n    tab.active = true;\n  }\n\n}\n","<ul class=\"show-details-tabs\">\n  <li *ngFor=\"let tab of tabs\" (click)=\"selectTab(tab)\" [class.active]=\"tab.active\" class=\"show-details-tab-title\">\n    {{tab.title}}\n  </li>\n</ul>\n\n<ng-content></ng-content>\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PanelBackgroundService {\n\n  defaultBackgroundURL = \"/static/images/vestibule_default-13.jpg\"\n  private backgroundURL = new BehaviorSubject(this.defaultBackgroundURL);\n\n  currentBackground = this.backgroundURL.asObservable();\n\n  constructor() { }\n\n  changeBackground(url: string) {\n    this.backgroundURL.next(url)\n  }\n\n  defaultBackground() {\n    this.backgroundURL.next(\"\")\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { ShowsRoutingModule } from './shows-routing.module';\nimport { ShowsListComponent } from './shows-list.component';\nimport { PosterStripComponent } from './poster-strip/poster-strip.component';\nimport { ShowDetailsComponent } from './show-details.component';\nimport { PluralPipePipe } from \"../pipes/plural-pipe.pipe\";\nimport { ShowDetailsTabComponent } from './show-details-tab/show-details-tab.component';\nimport { ShowDetailsTabsComponent } from './show-details-tabs/show-details-tabs.component';\nimport { ShowProfileComponent } from './show-profile/show-profile.component';\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { CookieModule } from 'ngx-cookie';\nimport { SharedModule } from \"../shared/shared.module\";\nimport { ShowTorrentsComponent } from './show-torrents/show-torrents.component';\nimport { ShowTorrentComponent } from './show-torrents/show-torrent/show-torrent.component';\nimport { ShowTorrentsSectionComponent } from './show-torrents/show-torrents-section/show-torrents-section.component';\n\n@NgModule({\n  declarations: [\n    PluralPipePipe,\n    ShowsListComponent,\n    PosterStripComponent,\n    ShowDetailsComponent,\n    ShowDetailsTabComponent,\n    ShowDetailsTabsComponent,\n    ShowProfileComponent,\n    ShowTorrentsComponent,\n    ShowTorrentComponent,\n    ShowTorrentsSectionComponent\n  ],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    SharedModule,\n    ShowsRoutingModule,\n    ReactiveFormsModule,\n    CookieModule,\n  ]\n})\nexport class ShowsModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoadingButtonComponent } from './loading-button/loading-button.component';\n\n\n\n@NgModule({\n  declarations: [LoadingButtonComponent],\n  exports: [\n    LoadingButtonComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class SharedModule { }\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'vestibule-show-details-tab',\n  templateUrl: './show-details-tab.component.html',\n  styleUrls: ['./show-details-tab.component.scss']\n})\nexport class ShowDetailsTabComponent implements OnInit {\n  @Input('tabTitle') title: string;\n  @Input() active = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div [hidden]=\"!active\">\n  <ng-content></ng-content>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {ShowsService} from \"./shows.service\";\nimport {ShowDetails} from \"./show\";\nimport {PanelBackgroundService} from \"../panel/panel-background/panel-background.service\";\nimport {LoadingButtonStatus} from \"../shared/loading-button/loading-button-status\";\nimport {Router} from \"@angular/router\"\nimport {Subject} from \"rxjs\";\n\n@Component({\n  selector: 'vestibule-show-details',\n  templateUrl: './show-details.component.html',\n  styleUrls: ['./show-details.component.scss']\n})\nexport class ShowDetailsComponent implements OnInit, OnDestroy {\n\n  showUpdated: Subject<void> = new Subject<void>();\n  imdb_id: any;\n  show: ShowDetails;\n\n  public updateShowInfoStatus = LoadingButtonStatus.idle\n  public findShowTorrentsStatus = LoadingButtonStatus.idle\n  public unsubscribeShowStatus = LoadingButtonStatus.idle\n\n  private sub: any;\n\n  constructor(private route: ActivatedRoute, private showsService: ShowsService,\n              private panelBackgroundService: PanelBackgroundService,\n              private router: Router) {}\n\n  ngOnInit(): void {\n    this.sub = this.route.params.subscribe(params => {\n      this.imdb_id = params['imdb_id']\n      this.showsService.showDetails(this.imdb_id).subscribe(\n        data => {\n          this.show = data\n          this.panelBackgroundService.changeBackground(this.show.thumbnail_link)\n        }\n      )\n    });\n  }\n\n  ngOnDestroy() {\n    this.panelBackgroundService.defaultBackground()\n    this.sub.unsubscribe();\n  }\n\n  resetMessagesAndStatus() {\n    this.updateShowInfoStatus = LoadingButtonStatus.idle\n    this.findShowTorrentsStatus = LoadingButtonStatus.idle\n    this.unsubscribeShowStatus = LoadingButtonStatus.idle\n  }\n\n  onUpdateShowInfo() {\n    this.resetMessagesAndStatus()\n    this.updateShowInfoStatus = LoadingButtonStatus.loading\n    this.showsService.updateShowInfo(this.imdb_id).subscribe(\n      data => {\n        this.show = data\n        this.updateShowInfoStatus = LoadingButtonStatus.idle\n        this.showUpdated.next()\n      },\n      error => {\n        this.updateShowInfoStatus = LoadingButtonStatus.error\n      }\n    )\n  }\n\n  onFindShowTorrents() {\n    this.resetMessagesAndStatus()\n    this.findShowTorrentsStatus = LoadingButtonStatus.loading\n    this.showsService.findShowTorrents(this.imdb_id).subscribe(\n      data => {\n        this.show = data\n        this.findShowTorrentsStatus = LoadingButtonStatus.idle\n      },\n      error => {\n        this.findShowTorrentsStatus = LoadingButtonStatus.error\n      }\n    )\n  }\n\n  onUnsubscribe() {\n    this.resetMessagesAndStatus()\n    this.unsubscribeShowStatus = LoadingButtonStatus.confirm\n  }\n\n  onUnsubscribeCancel() {\n    this.resetMessagesAndStatus()\n  }\n\n  onUnsubscribeConfirm() {\n    this.showsService.unsubscribeFromShow(this.imdb_id).subscribe(\n      data => {\n        this.router.navigate(['/shows'])\n      },\n      error => {\n        this.unsubscribeShowStatus = LoadingButtonStatus.error\n      }\n    )\n  }\n\n}\n","<ng-container *ngIf=\"show\">\n<p class=\"show-title\">{{show.title}}</p>\n\n<vestibule-show-details-tabs>\n\n  <vestibule-show-details-tab tabTitle=\"Status\" active=\"true\">\n    <p class=\"show-title-tags\">\n        <span *ngIf=\"show.year\"><span> {{ show.year }} </span><span class=\"bullet\">•</span></span>\n        <span *ngIf=\"show.network\"><span> {{ show.network }} </span><span class=\"bullet\">•</span></span>\n        <span *ngIf=\"show.number_of_seasons_as_int\"><span> {{ show.number_of_seasons_as_int | pluralPipe:'Season' }}</span></span>\n    </p>\n\n    <p class=\"show-status-line\">{{ show.status_line }}</p>\n    <p *ngIf=\"show.next_episode\" class=\"show-next-episode-line\">Next Episode: {{ show.next_episode }}</p>\n\n    <div class=\"show-imdb-link\">\n      <p><a href=\"{{show.imdb_url}}\" target=\"_blank\">IMDB</a> {{show.imdb_rating}}</p>\n    </div>\n  </vestibule-show-details-tab>\n\n  <vestibule-show-details-tab tabTitle=\"Episodes + Torrents\">\n    <vestibule-show-torrents [show]=\"show\" [showUpdated$]=\"showUpdated.asObservable()\"></vestibule-show-torrents>\n  </vestibule-show-details-tab>\n\n  <vestibule-show-details-tab tabTitle=\"Subscription Profile\">\n    <vestibule-show-profile [showProfile]=\"show.profile\" [showImdbID]=\"show.imdb_id\"></vestibule-show-profile>\n  </vestibule-show-details-tab>\n\n  <vestibule-show-details-tab tabTitle=\"Actions\">\n\n    <vestibule-loading-button>\n      <button (click)=\"onUpdateShowInfo()\"\n      [ngClass]=\"{\n        'loading': updateShowInfoStatus === 'loading',\n        'error': updateShowInfoStatus === 'error'\n      }\">Update Show Info</button>\n    </vestibule-loading-button>\n\n    <vestibule-loading-button>\n      <button (click)=\"onFindShowTorrents()\"\n      [ngClass]=\"{\n        'loading': findShowTorrentsStatus === 'loading',\n        'error': findShowTorrentsStatus === 'error'\n      }\">Find Show Torrents</button>\n    </vestibule-loading-button>\n\n    <div class=\"danger-zone-actions\">\n      <p>Danger Zone</p>\n      <vestibule-loading-button>\n        <button class=\"danger-zone-button\" (click)=\"onUnsubscribe()\">\n          Unsubscribe from Show</button>\n      </vestibule-loading-button>\n      <div *ngIf=\"unsubscribeShowStatus === 'confirm'\" class=\"danger-zone-confirm\">\n        <div class=\"danger-zone-text\">\n          <p>\n            This will delete all '{{this.show.title}}' Torrents and show info<br>\n            <b>Are you sure you want to unsubscribe?</b>\n          </p>\n        </div>\n        <button (click)=\"onUnsubscribeConfirm()\" class=\"danger-zone-confirm-yes\">Yes, unsubscribe</button>\n        <button (click)=\"onUnsubscribeCancel()\" class=\"danger-zone-confirm-cancel\">Cancel</button>\n      </div>\n    </div>\n\n  </vestibule-show-details-tab>\n\n</vestibule-show-details-tabs>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'vestibule-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>dashboard works!</p>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'vestibule';\n}\n","<vestibule-panel></vestibule-panel>\n<div id=\"main-container\">\n  <router-outlet></router-outlet>\n</div>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'pluralPipe'\n})\nexport class PluralPipePipe implements PipeTransform {\n\n  transform(number: number, singularText: string, pluralText: string = null): string {\n        let pluralWord = pluralText ? pluralText : `${singularText}s`;\n        return number > 1 ? `${number} ${pluralWord}` : `${number} ${singularText}`;\n    }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PanelComponent } from './panel/panel.component';\nimport { ServicesStatusComponent } from './panel/services-status/services-status.component';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { ShowsModule } from \"./shows/shows.module\";\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PanelComponent,\n    ServicesStatusComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    ShowsModule,\n    AppRoutingModule,\n    HttpClientModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ServiceStatus} from \"./service-status\";\nimport {interval, Subscription} from \"rxjs\";\nimport {ServicesStatusService} from \"./services-status.service\";\n\n@Component({\n  selector: 'vestibule-services-status',\n  templateUrl: './services-status.component.html',\n  styleUrls: ['./services-status.component.scss']\n})\nexport class ServicesStatusComponent implements OnInit, OnDestroy{\n\n  plexStatus: ServiceStatus;\n  transmissionStatus: ServiceStatus;\n  private statusUpdater: Subscription\n\n  constructor(private servicesStatusService: ServicesStatusService) { }\n\n  ngOnInit(): void {\n    this.updateServicesStatus();\n    this.statusUpdater = interval(10000).subscribe(\n      () => this.updateServicesStatus())\n  }\n\n  updateServicesStatus(): void {\n    this.servicesStatusService.getServicesStatus().subscribe(\n      data => {\n        this.plexStatus = data[\"services\"][\"plex\"];\n        this.transmissionStatus = data[\"services\"][\"transmission\"];\n      }\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.statusUpdater.unsubscribe();\n  }\n}\n","<section id=\"services-status-box\">\n\n  <!--  Plex Status -->\n  <a class=\"service-wrap service-active\"\n     [ngClass]=\"{'service-up': plexStatus?.up, 'service-down': !plexStatus?.up}\"\n     target=\"_blank\" href=\"{{plexStatus?.url}}\">\n\n    <div class=\"service-status-bar\"></div>\n    <img class=\"service-icon\" alt=\"Plex is {{plexStatus?.up ? 'Up' : 'Down'}}\"\n         src=\"/static/images/plex_icon.svg\">\n  </a>\n\n  <!--  Transmission Status -->\n  <a class=\"service-wrap service-active\"\n     [ngClass]=\"{'service-up': transmissionStatus?.up, 'service-down': !transmissionStatus?.up}\"\n     target=\"_blank\" href=\"{{transmissionStatus?.url}}\">\n\n    <div class=\"service-status-bar\"></div>\n    <img class=\"service-icon\" alt=\"Transmission is {{transmissionStatus?.up ? 'Up' : 'Down'}}\"\n         src=\"/static/images/transmission_icon.svg\">\n  </a>\n\n</section>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {ShowsListComponent} from \"./shows-list.component\";\nimport {ShowDetailsComponent} from \"./show-details.component\";\n\nconst routes: Routes = [\n  { path: 'shows', component: ShowsListComponent },\n  { path: 'shows/:imdb_id', component: ShowDetailsComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ShowsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {DashboardComponent} from \"./dashboard/dashboard.component\";\n\nconst routes: Routes = [\n  {path: 'dashboard', component: DashboardComponent},\n  {path: '', redirectTo: 'dashboard', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import {Component, Input, OnChanges, OnInit} from '@angular/core';\nimport {Episode, Season, ShowDetails, Torrent} from \"../../show\";\n\n@Component({\n  selector: 'vestibule-show-torrents-section',\n  templateUrl: './show-torrents-section.component.html',\n  styleUrls: ['./show-torrents-section.component.scss']\n})\nexport class ShowTorrentsSectionComponent implements OnInit, OnChanges {\n\n  @Input() title: string\n  @Input() defaultOpen = false\n  @Input() matchingTorrents: boolean\n  @Input() torrents: Torrent[]\n  @Input() show: ShowDetails\n  @Input() season: Season\n  @Input() episode?: Episode\n\n  public openList: boolean\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.openList = this.defaultOpen\n  }\n\n  ngOnChanges(): void {\n    this.openList = this.defaultOpen\n  }\n\n  toggleListOpen(): void {\n    this.openList = !this.openList\n  }\n}\n","<ng-container *ngIf=\"torrents.length\">\n  <div class=\"torrents-section-header\">\n    <p (click)=\"toggleListOpen()\">{{ title }}\n      <span [class.matching-torrents]=matchingTorrents class=\"torrents-count\">{{torrents.length}}</span>\n      <span class=\"list-action\"> {{openList ? 'Hide' : 'Show'}}</span>\n    </p>\n  </div>\n  <div class=\"torrents-section-list\" *ngIf=\"openList\">\n    <div *ngFor=\"let torrent of torrents\" class=\"torrent-cont\">\n      <vestibule-show-torrent\n        [show]=\"show\"\n        [season]=\"season\"\n        [episode]=\"episode\"\n        [torrent]=\"torrent\"></vestibule-show-torrent>\n    </div>\n  </div>\n</ng-container>\n"],"sourceRoot":"webpack:///"}