{"version":3,"sources":["./src/app/shared/loading-button/loading-button.component.ts","./src/app/shared/loading-button/loading-button.component.html","./src/app/panel/services-status/service-status.ts","./src/app/shared/loading-button/loading-button-status.ts","./src/app/shows/show-torrents/show-torrents.component.ts","./src/app/shows/show-torrents/show-torrents.component.html","./src/app/shows/show-details/show-details-tabs/show-details-tabs.component.ts","./src/app/shows/show-details/show-details-tabs/show-details-tabs.component.html","./src/app/shared/pipes/plural-pipe.pipe.ts","./src/app/panel/services-status/services-status.service.ts","./src/app/panel/panel.component.ts","./src/app/panel/panel.component.html","./src/app/shows/show-profile/show-profile.component.ts","./src/app/shows/show-profile/show-profile.component.html","./src/app/authentication/authentication.service.ts","./src/app/shows/shows.service.ts","./src/environments/environment.ts","./src/app/shows/show-details/show-details.component.ts","./src/app/shows/show-details/show-details.component.html","./src/app/movies/movies.module.ts","./src/app/panel/panel-background/panel-background.service.ts","./src/app/find/find.module.ts","./src/app/shared/poster-strip/poster-strip.component.ts","./src/app/shared/poster-strip/poster-strip.component.html","./src/app/shows/shows.module.ts","./src/app/shared/shared.module.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/authentication/token.interceptor.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/find/find-routing.module.ts","./src/app/torrents/torrents-routing.module.ts","./src/app/shows/show-details/show-details-tab/show-details-tab.component.ts","./src/app/shows/show-details/show-details-tab/show-details-tab.component.html","./src/app/movies/movies.service.ts","./src/app/app.module.ts","./src/app/panel/services-status/services-status.component.ts","./src/app/panel/services-status/services-status.component.html","./src/app/torrents/torrent.ts","./src/app/movies/movies-routing.module.ts","./src/app/shows/shows-list/shows-status-group/shows-status-group.component.ts","./src/app/shows/shows-list/shows-status-group/shows-status-group.component.html","./src/app/shared/torrent-download-status/torrent-download-status.component.ts","./src/app/shared/torrent-download-status/torrent-download-status.component.html","./src/app/shows/shows-list/shows-list.component.ts","./src/app/shows/shows-list/shows-list.component.html","./src/app/find/find-results/find-results.component.ts","./src/app/find/find-results/find-results.component.html","./src/app/torrents/torrents.module.ts","./src/app/dashboard/show-preview/show-preview.component.ts","./src/app/dashboard/show-preview/show-preview.component.html","./src/app/torrents/torrents.service.ts","./src/app/shows/shows-routing.module.ts","./src/app/app-routing.module.ts","./src/app/shared/show-torrent/show-torrent.component.ts","./src/app/shared/show-torrent/show-torrent.component.html","./src/app/movies/movies-list/movies-list.component.ts","./src/app/movies/movies-list/movies-list.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/app/shows/show-torrents/show-torrents-section/show-torrents-section.component.ts","./src/app/shows/show-torrents/show-torrents-section/show-torrents-section.component.html"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'vestibule-loading-button',\n  templateUrl: './loading-button.component.html',\n  styleUrls: ['./loading-button.component.scss']\n})\nexport class LoadingButtonComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"button-title\">\n  <ng-content></ng-content>\n</div>\n","export interface ServiceStatusResponse {\n  services: { [status: string] : ServiceStatus }\n}\n\nexport interface ServiceStatus {\n  name: string;\n  up: boolean;\n  url?: string;\n}\n\nexport const INITIAL_STATUS: ServiceStatusResponse = {\n  services: {\n    plex: {\n      name: 'plex',\n      up: false\n    },\n    transmission: {\n      name: 'transmission',\n      up: false\n    }\n  }\n}\n","export class LoadingButtonStatus {\n  public static readonly idle = ''\n  public static readonly loading = 'loading'\n  public static readonly error = 'error'\n  public static readonly confirm = 'confirm'\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ShowsService } from \"../shows.service\";\nimport { Season, Episode, ShowTorrents, ShowDetails } from \"../show\";\nimport { Observable, Subscription } from \"rxjs\";\nimport { ServicesStatusService } from \"../../panel/services-status/services-status.service\";\n\nclass EpisodeStatusColors {\n  public static SKIP = '#c78415'\n  public static SHOULD_DOWNLOAD = '#0071bc'\n  public static DOWNLOADED = '#50ad6f'\n  public static NOT_AIRED = '#8241d8'\n}\n\n@Component({\n  selector: 'vestibule-show-torrents',\n  templateUrl: './show-torrents.component.html',\n  styleUrls: ['./show-torrents.component.scss']\n})\nexport class ShowTorrentsComponent implements OnInit, OnDestroy {\n  @Input() show: ShowDetails\n  @Input() showUpdated$: Observable<void>\n\n  private showUpdatedSubscription: Subscription\n\n  canDownload = false\n  seasons: ShowTorrents\n  selectedSeason: Season\n  selectedEpisode: Episode\n\n  constructor(private showsService: ShowsService, private servicesStatusService: ServicesStatusService) { }\n\n  ngOnInit(): void {\n    this.updateShowTorrents()\n    this.showUpdatedSubscription = this.showUpdated$.subscribe(() => this.updateShowTorrents())\n        this.servicesStatusService.getServicesStatus().subscribe(\n      data => this.canDownload = data.services[\"transmission\"]?.up\n    )\n  }\n\n  updateShowTorrents(): void {\n    this.showsService.listShowTorrents(this.show.imdb_id)\n      .subscribe(data => {\n        this.seasons = data\n\n        if (this.seasons.seasons.length) {\n          this.selectedSeason = this.seasons.seasons[0]\n\n          if (this.selectedSeason.episodes.length) {\n            this.selectedEpisode = this.selectedSeason.episodes[0]\n          }\n        }\n      })\n  }\n\n  episodeStatusBulletColor(episode: Episode): string {\n    if (episode.is_downloaded) {\n      return EpisodeStatusColors.DOWNLOADED\n    }\n\n    if (!episode.should_download) {\n      return EpisodeStatusColors.SKIP\n    }\n\n    return episode.is_aired ? EpisodeStatusColors.SHOULD_DOWNLOAD : EpisodeStatusColors.NOT_AIRED\n  }\n\n  episodeStatusText(episode: Episode): string {\n    if (episode.is_downloaded) {\n      return 'Downloaded'\n    }\n\n    if (!episode.should_download) {\n      return 'Skip'\n    }\n\n    return episode.is_aired ? 'Should Download' : 'Not Aired Yet'\n  }\n\n  updateEpisodeDownloadStatus(episode: Episode): void {\n    this.showsService.updateShowTorrents(\n      this.show.imdb_id,\n      { episode: { id: episode.id, should_download: !episode.should_download }}).subscribe(\n        data => {\n          this.seasons = data\n          this.updateSelected()\n        }\n    )\n  }\n\n  updateSeasonDownloadStatus(season: Season): void {\n    this.showsService.updateShowTorrents(\n      this.show.imdb_id,\n      { season: { id: season.id, should_download: !season.should_download }}).subscribe(\n        data => {\n          this.seasons = data\n          this.updateSelected()\n        }\n    )\n  }\n\n  downloadEpisodeBestMatch(episode: Episode): void {\n    if (this.showNoTorrentsMessage()) {\n      console.log('Episode has no torrents')\n      return\n    }\n\n    if (!this.canDownload) {\n      console.log('Transmission is down')\n      return\n    }\n\n    this.showsService.downloadEpisodeBestMatch(\n      this.show.imdb_id,\n      { episode: { id: episode.id }}).subscribe(\n        data => {\n          this.seasons = data\n          this.updateSelected()\n        }\n    )\n  }\n\n  private updateSelected(): void {\n    this.selectedSeason = this.seasons.seasons.find(season => season.id === this.selectedSeason.id)\n    this.selectedEpisode = this.selectedSeason.episodes.find(episode => episode.id === this.selectedEpisode.id)\n  }\n\n  chooseEpisode(season: Season, episode: Episode): void {\n    this.selectedSeason = season\n    this.selectedEpisode = episode\n  }\n\n  showNoTorrentsMessage(): boolean {\n    return !this.selectedSeason.season_matching_torrents.length &&\n      !this.selectedSeason.season_unmatching_torrents.length &&\n      !this.selectedEpisode.matching_torrents.length &&\n      !this.selectedEpisode.unmatching_torrents.length\n  }\n\n  ngOnDestroy() {\n    this.showUpdatedSubscription.unsubscribe()\n  }\n}\n","<ng-container *ngIf=\"seasons\">\n  <div id=\"show-torrents-cont\">\n    <section id=\"show-seasons-menu\">\n      <div *ngFor=\"let season of seasons.seasons\"\n           class=\"season-cont\"\n           [class.selected-season]=\"season.id === selectedSeason.id\">\n        <div class=\"season-episodes-list\">\n          <div *ngFor=\"let episode of season.episodes\"\n               class=\"episode-block-cont\"\n               [class.selected-episode]=\"episode.id === selectedEpisode.id\"\n               (click)=\"chooseEpisode(season, episode)\">\n              <div class=\"episode-block-number\">\n                <p >{{episode.number}}</p>\n              </div>\n              <div class=\"episode-block\" [style.backgroundColor]=\"episodeStatusBulletColor(episode)\"></div>\n          </div>\n        </div>\n\n        <div class=\"season-title-cont\">\n          <p class=\"season-title\">{{season.title}}</p>\n        </div>\n\n      </div>\n    </section>\n\n    <section id=\"episode-details-cont\" *ngIf=\"selectedEpisode\">\n      <div class=\"episode-details-header\">\n        <p class=\"episode-details-title\">{{selectedEpisode.title}}</p>\n        <p class=\"episode-details-subtitle-info\">\n          <span>{{selectedSeason.title}}</span>\n          <span>&nbsp; &mdash; &nbsp;</span>\n          <span>E{{selectedEpisode.number}}</span>\n          <span>&nbsp; &mdash; &nbsp;</span>\n          <span>{{selectedEpisode.air_status}}</span>\n        </p>\n      </div>\n\n      <div class=\"episode-download-status-cont\">\n        <div class=\"episode-download-status\" [style.color]=\"episodeStatusBulletColor(selectedEpisode)\">\n          <span class=\"episode-status-bullet\" [style.backgroundColor]=\"episodeStatusBulletColor(selectedEpisode)\"></span>\n          <span>{{episodeStatusText(selectedEpisode)}}</span>\n        </div>\n\n        <div class=\"episode-download-status-actions\">\n          <div class=\"episode-download-status-action skip-action\" (click)=\"updateEpisodeDownloadStatus(selectedEpisode)\">\n            <span>{{ selectedEpisode.should_download ? 'Skip' : 'Un-skip' }} this Episode</span>\n          </div>\n\n          <div class=\"episode-download-status-action skip-action\" (click)=\"updateSeasonDownloadStatus(selectedSeason)\">\n            <span>{{ selectedSeason.should_download ? 'Skip' : 'Un-skip' }} this Season</span>\n          </div>\n\n          <div class=\"episode-download-status-action download-action\"\n               [ngClass]=\"{ disabled: !canDownload || this.showNoTorrentsMessage() }\"\n               (click)=\"downloadEpisodeBestMatch(selectedEpisode)\">\n            <span>Download Best Match</span>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"episode-torrents-list\">\n        <p *ngIf=\"showNoTorrentsMessage() else hasTorrents\" class=\"no-torrents-found-message\">No torrents found for this Episode yet</p>\n\n        <ng-template #hasTorrents>\n          <vestibule-show-torrents-section\n            [title]=\"'Profile Matching Episode Torrents'\"\n            [torrents]=\"selectedEpisode.matching_torrents\"\n            [episode]=\"selectedEpisode\"\n            [season]=\"selectedSeason\"\n            [show]=\"show\"\n            [defaultOpen]=\"true\"\n            [matchingTorrents]=\"true\"\n          ></vestibule-show-torrents-section>\n\n          <vestibule-show-torrents-section\n            [title]=\"'Profile Matching Season Torrents'\"\n            [torrents]=\"selectedSeason.season_matching_torrents\"\n            [season]=\"selectedSeason\"\n            [show]=\"show\"\n            [defaultOpen]=\"true\"\n            [matchingTorrents]=\"true\"\n          ></vestibule-show-torrents-section>\n\n          <vestibule-show-torrents-section\n            [title]=\"'Episode Torrents (Not Matching Profile)'\"\n            [torrents]=\"selectedEpisode.unmatching_torrents\"\n            [episode]=\"selectedEpisode\"\n            [season]=\"selectedSeason\"\n            [show]=\"show\"\n            [matchingTorrents]=\"false\"\n          ></vestibule-show-torrents-section>\n\n          <vestibule-show-torrents-section\n            [title]=\"'Season Torrents (Not Matching Profile)'\"\n            [torrents]=\"selectedSeason.season_unmatching_torrents\"\n            [season]=\"selectedSeason\"\n            [show]=\"show\"\n            [matchingTorrents]=\"false\"\n          ></vestibule-show-torrents-section>\n        </ng-template>\n\n      </div>\n    </section>\n  </div>\n</ng-container>\n","import {AfterContentInit, Component, ContentChildren, QueryList} from '@angular/core';\nimport {ShowDetailsTabComponent} from \"../show-details-tab/show-details-tab.component\";\n\n@Component({\n  selector: 'vestibule-show-details-tabs',\n  templateUrl: './show-details-tabs.component.html',\n  styleUrls: ['./show-details-tabs.component.scss']\n})\nexport class ShowDetailsTabsComponent implements AfterContentInit {\n\n  @ContentChildren(ShowDetailsTabComponent) tabs: QueryList<ShowDetailsTabComponent>;\n\n  constructor() { }\n\n  ngAfterContentInit(): void {\n    let activeTabs = this.tabs.filter((tab)=>tab.active);\n\n    if (activeTabs.length === 0) {\n      this.selectTab(this.tabs.first);\n    }\n  }\n\n  selectTab(tab: ShowDetailsTabComponent){\n    this.tabs.toArray().forEach(tab => tab.active = false);\n    tab.active = true;\n  }\n\n}\n","<ul class=\"show-details-tabs\">\n  <li *ngFor=\"let tab of tabs\" (click)=\"selectTab(tab)\" [class.active]=\"tab.active\" class=\"show-details-tab-title\">\n    {{tab.title}}\n  </li>\n</ul>\n\n<ng-content></ng-content>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'pluralPipe'\n})\nexport class PluralPipePipe implements PipeTransform {\n\n  transform(number: number, singularText: string, pluralText: string = null): string {\n        let pluralWord = pluralText ? pluralText : `${singularText}s`;\n        return number > 1 ? `${number} ${pluralWord}` : `${number} ${singularText}`;\n    }\n}\n","import {Injectable, OnDestroy, OnInit} from '@angular/core';\nimport { HttpClient} from \"@angular/common/http\";\nimport {INITIAL_STATUS, ServiceStatusResponse} from \"./service-status\";\nimport {BehaviorSubject, interval, Observable, Subscription} from \"rxjs\";\nimport { take } from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServicesStatusService implements OnDestroy {\n  private statusUpdater: Subscription\n  private status = new BehaviorSubject<ServiceStatusResponse>(INITIAL_STATUS)\n\n  constructor(private http: HttpClient) {\n    this.updateServicesStatus();\n    this.statusUpdater = interval(10000000).subscribe(\n      () => this.updateServicesStatus())\n  }\n\n  private updateServicesStatus(): void {\n    this.getCurrentServicesStatus().pipe(take(1)).subscribe(data => this.status.next(data));\n  }\n\n  private getCurrentServicesStatus(): Observable<ServiceStatusResponse> {\n    return this.http.get<ServiceStatusResponse>('api/services-status')\n  }\n\n  public getServicesStatus(): Observable<ServiceStatusResponse> {\n    return this.status.asObservable()\n  }\n\n  ngOnDestroy(): void {\n    this.statusUpdater.unsubscribe();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { PanelBackgroundService } from './panel-background/panel-background.service'\nimport {NavigationEnd, Router, Event} from \"@angular/router\";\nimport { FormBuilder } from \"@angular/forms\";\n\n@Component({\n  selector: 'vestibule-panel',\n  templateUrl: './panel.component.html',\n  styleUrls: ['./panel.component.scss']\n})\nexport class PanelComponent implements OnInit {\n  backgroundURL: string\n  defaultBackgroundURL: string\n  isDynamicVisible = false\n  mobileMenuShown = false\n\n  findForm = this.fb.group({\n    term: ['', []]\n  })\n\n  constructor(private fb: FormBuilder, private panelBackgroundService: PanelBackgroundService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.defaultBackgroundURL = this.panelBackgroundService.defaultBackgroundURL\n    this.panelBackgroundService.currentBackground.subscribe(url => {\n      if (url === \"\"){\n        this.isDynamicVisible = false\n      } else {\n        this.backgroundURL = url\n        this.isDynamicVisible = true\n      }\n    })\n\n    this.router.events.subscribe((event: Event) => {\n      if (event instanceof NavigationEnd) {\n        this.mobileMenuShown = false\n      }\n    })\n  }\n\n  onFindSubmit() {\n    const control = this.findForm.controls['term']\n    this.router.navigate(['/find/results'], {state: {data: {term: control.value }}})\n    control.setValue('')\n  }\n\n}\n","<section id=\"panel\">\n\n  <div id=\"vestibule-home\">\n    <a [routerLink]=\"'/dashboard'\" class=\"acier-title\">VESTIBULE</a>\n  </div>\n\n  <div class=\"desktop-menu\">\n      <ng-template [ngTemplateOutlet]=\"menu\"></ng-template>\n  </div>\n\n  <div class=\"mobile-menu-button\">\n    <div class=\"button\" (click)=\"mobileMenuShown=!mobileMenuShown\" cdkOverlayOrigin #trigger>\n      <div class=\"dots-icon\">\n        <div class=\"dot\"></div>\n        <div class=\"dot\"></div>\n        <div class=\"dot\"></div>\n      </div>\n    </div>\n\n    <ng-template\n    cdkConnectedOverlay\n    [cdkConnectedOverlayOrigin]=\"trigger\"\n    [cdkConnectedOverlayOpen]=\"mobileMenuShown\"\n    (backdropClick)=\"mobileMenuShown=false\">\n      <div class=\"mobile-menu\" *ngIf=\"mobileMenuShown\">\n        <ng-template [ngTemplateOutlet]=\"menu\"></ng-template>\n      </div>\n    </ng-template>\n  </div>\n\n  <vestibule-services-status></vestibule-services-status>\n\n</section>\n\n<div id=\"strip\">\n  <img alt=\"Vestibule\" class=\"strip-img\" [src]=defaultBackgroundURL crossorigin=\"anonymous\">\n  <img alt=\"Vestibule\" class=\"strip-img\" id=\"dynamic-background\"\n       [class.visible]=\"isDynamicVisible\"\n       [src]=backgroundURL\n       crossorigin=\"anonymous\"\n  >\n  <div id=\"strip-cover\"></div>\n</div>\n\n<ng-template #menu>\n    <div id=\"main-links-box\">\n\n      <section class=\"side-panel-links\">\n          <a [routerLink]=\"'shows'\" class=\"side-panel-link\">Shows</a>\n          <a [routerLink]=\"'movies'\" class=\"side-panel-link\">Movies</a>\n          <a href=\"/\" class=\"side-panel-link\">Feeds</a>\n<!--          <a href=\"/\" class=\"side-panel-link\">Torrents</a>-->\n      </section>\n\n      <div class=\"side-panel-divider\"></div>\n\n      <section class=\"side-panel-links\">\n        <form [formGroup]=\"findForm\" (submit)=\"onFindSubmit()\" class=\"side-panel-input-form\">\n          <a [routerLink]=\"'find/results'\">\n            <img class=\"side-panel-icon\" alt=\"Find\" src=\"/static/images/find_icon.svg\">\n          </a>\n          <input formControlName=\"term\" class=\"side-panel-input\" type=\"text\" placeholder=\"Find\">\n        </form>\n      </section>\n\n  </div>\n</ng-template>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ShowProfile } from \"../show\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { ShowsService } from \"../shows.service\";\n\n@Component({\n  selector: 'vestibule-show-profile',\n  templateUrl: './show-profile.component.html',\n  styleUrls: ['./show-profile.component.scss']\n})\nexport class ShowProfileComponent implements OnInit {\n  @Input() showProfile: ShowProfile\n  @Input() showImdbID: string\n  @Input() showCustomLookupNames: string\n\n  isChanged = false\n  isLoading = false\n  hasSaveError = false\n\n  profileForm = this.fb.group({\n    quality: ['', Validators.required],\n    subtitles: ['', Validators.required],\n    high_quality_source: ['', Validators.required],\n    download_automatically: ['', Validators.required],\n    wait: ['', Validators.required],\n    custom_lookup_names: ['']\n  })\n\n  qualities = [\n    '720P',\n    '1080P',\n    '4K'\n  ]\n\n  waitTimes = [\n    {name: 'Don\\'t Wait', value: 'N'},\n    {name: 'Up to a Day', value: '1D'},\n    {name: 'Up to 2 Days', value: '2D'},\n    {name: 'Up to 3 Days', value: '3D'},\n    {name: 'Up to 4 Days', value: '4D'},\n    {name: 'Up to 5 Days', value: '5D'},\n    {name: 'Up to 6 Days', value: '6D'},\n    {name: 'Up to a Week', value: '1W'},\n    {name: 'Forever', value: 'F'},\n  ]\n\n  constructor(private fb: FormBuilder, private showsService: ShowsService) { }\n\n  ngOnInit(): void {\n    this.profileForm.setValue({\n      quality: this.showProfile.quality,\n      subtitles: this.showProfile.subtitles,\n      high_quality_source: this.showProfile.high_quality_source,\n      download_automatically: this.showProfile.download_automatically,\n      wait: this.showProfile.wait,\n      custom_lookup_names: this.showCustomLookupNames\n    })\n\n    this.profileForm.valueChanges.subscribe(val => {\n      this.hasSaveError = false\n      this.updateIsChanged()\n    });\n  }\n\n  onSubmit() {\n    let settingsLoading = true\n    let profileLoading = true\n\n    this.isLoading = true\n    this.hasSaveError = false\n\n    const customLookupName = this.profileForm.get('custom_lookup_names').value as string\n\n    if (customLookupName) {\n      this.showsService.updateShowSettings(this.showImdbID, { imdb_id: this.showImdbID, custom_lookup_names: customLookupName }).subscribe(\n        showDetails => {\n          settingsLoading = false\n          this.showCustomLookupNames = showDetails.custom_lookup_names\n          this.updateIsChanged()\n          this.isLoading = profileLoading && settingsLoading\n      })\n    } else {\n      settingsLoading = false\n    }\n\n    this.showsService.updateShowProfile(this.showImdbID, this.profileForm.value).subscribe(\n      data => {\n        this.showProfile = data\n        this.updateIsChanged()\n        profileLoading = false\n        this.isLoading = profileLoading && settingsLoading\n      },\n      () => {\n        profileLoading = false\n        this.isLoading = profileLoading && settingsLoading\n        this.hasSaveError = true\n      }\n    )\n  }\n\n  updateIsChanged() {\n    this.isChanged =  JSON.stringify(this.profileForm.value) !== JSON.stringify({...this.showProfile, ...{ custom_lookup_names: this.showCustomLookupNames }})\n  }\n}\n","<form [formGroup]=\"profileForm\" (ngSubmit)=\"onSubmit()\">\n\n  <div class=\"profile-form-field\">\n    <label>\n      Preferred Video Quality\n      <span class=\"bullet\">•</span>\n      <select formControlName=\"quality\" class=\"profile-form-option-select\">\n        <option *ngFor=\"let quality of qualities\" [ngValue]=\"quality\">{{ quality }}</option>\n      </select>\n    </label>\n\n    <p class=\"profile-option-description\">\n      Should favor torrents with matching video quality (or higher if not found)\n    </p>\n  </div>\n\n  <div class=\"profile-form-field\">\n    <label>\n      Wait for Match\n      <span class=\"bullet\">•</span>\n      <select formControlName=\"wait\" class=\"profile-form-option-select\">\n        <option *ngFor=\"let waitTime of waitTimes\" [ngValue]=\"waitTime.value\">{{ waitTime.name }}</option>\n      </select>\n    </label>\n\n    <p class=\"profile-option-description\">\n      How long should the automatic download wait if no full profile match is found\n    </p>\n  </div>\n\n  <div class=\"profile-form-field\">\n    <label>\n      Download Automatically\n      <span class=\"bullet\">•</span>\n      <select formControlName=\"download_automatically\" class=\"profile-form-option-select\">\n        <option [ngValue]=true>Yes</option>\n        <option [ngValue]=false>No</option>\n      </select>\n    </label>\n\n    <p class=\"profile-option-description\">\n      Should matching episodes be downloaded automatically upon match, or wait time exhaustion\n    </p>\n  </div>\n\n  <div class=\"profile-form-field\">\n    <label>\n      Requires Subtitles\n      <span class=\"bullet\">•</span>\n      <select formControlName=\"subtitles\" class=\"profile-form-option-select\">\n        <option [ngValue]=true>Yes</option>\n        <option [ngValue]=false>No</option>\n      </select>\n    </label>\n\n    <p class=\"profile-option-description\">\n      Should favor torrents with subtitles\n    </p>\n  </div>\n\n  <div class=\"profile-form-field\">\n    <label>\n      High-Quality Sources\n      <span class=\"bullet\">•</span>\n      <select formControlName=\"high_quality_source\" class=\"profile-form-option-select\">\n        <option [ngValue]=true>Yes</option>\n        <option [ngValue]=false>No</option>\n      </select>\n    </label>\n\n    <p class=\"profile-option-description\">\n      Should favor torrents from high quality sources, like Web or BlueRay\n    </p>\n  </div>\n\n  <div class=\"profile-form-field\">\n    <p>Custom Lookup Names</p>\n    <p class=\"profile-option-description\">\n      User-defined values used to find show torrents (will be added to auto-generated values)\n    </p>\n    <textarea formControlName=\"custom_lookup_names\" rows=\"5\" cols=\"20\"></textarea>\n  </div>\n\n  <button\n    type=\"submit\"\n    [disabled]=\"!profileForm.valid || !profileForm.dirty || !isChanged\"\n    class=\"profile-form-submit\"\n    [ngClass]=\"{\n      'disabled': !profileForm.valid || !profileForm.dirty || !isChanged,\n      'loading': isLoading,\n      'error': hasSaveError\n    }\"\n  >Save</button>\n  <p *ngIf=\"hasSaveError\" class=\"save-error-text\">Failed to save changes</p>\n\n</form>\n","import { Injectable } from '@angular/core';\nimport { CookieService } from \"ngx-cookie-service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  constructor(private cookieService: CookieService) { }\n\n  public getCSRFToken(): string {\n    return this.cookieService.get('csrftoken')\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport {\n  ShowInList,\n  ShowDetails,\n  ShowProfile,\n  ShowTorrents,\n  ShowSearchResults,\n  ShowSuccessfulSubscription,\n  ShowInUpcomingEpisodes,\n  EnrichedShowInfo,\n  PreviewShowTorrents,\n  UpdateTorrents,\n  DownloadEpisodeBestMatch,\n  ShowSettings,\n} from \"./show\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShowsService {\n\n  constructor(private http: HttpClient) { }\n\n  listShows(): Observable<ShowInList[]> {\n    return this.http.get<ShowInList[]>('api/shows/list')\n  }\n\n  listShowsByUpcomingEpisodes(): Observable<ShowInUpcomingEpisodes[]> {\n    return this.http.get<ShowInUpcomingEpisodes[]>('api/shows/upcoming_episodes')\n  }\n\n  showDetails(imdb_id: string): Observable<ShowDetails> {\n    return this.http.get<ShowDetails>(`api/shows/${imdb_id}`)\n  }\n\n  listShowTorrents(imdb_id: string): Observable<ShowTorrents> {\n    return this.http.get<ShowTorrents>(`api/shows/torrents/${imdb_id}`)\n  }\n\n  updateShowProfile(imdb_id: string, profile: ShowProfile): Observable<ShowProfile> {\n    return this.http.put<ShowProfile>(`api/shows/update_profile/${imdb_id}`, profile)\n  }\n\n  updateShowSettings(imdb_id: string, settings: ShowSettings): Observable<ShowDetails> {\n    return this.http.put<ShowDetails>(`api/shows/${imdb_id}`, settings)\n  }\n\n  updateShowInfo(imdb_id: string): Observable<ShowDetails> {\n    return this.http.get<ShowDetails>(`api/shows/update_info/${imdb_id}`)\n  }\n\n  findShowTorrents(imdb_id: string): Observable<ShowDetails> {\n    return this.http.get<ShowDetails>(`api/shows/find_torrents/${imdb_id}`)\n  }\n\n  unsubscribeFromShow(imdb_id: string): Observable<any> {\n    return this.http.delete<any>(`api/shows/${imdb_id}`)\n  }\n\n  subscribeToShow(imdb_id: string): Observable<ShowSuccessfulSubscription> {\n    return this.http.post<ShowSuccessfulSubscription>(`api/shows/subscribe`, {imdb_id: imdb_id})\n  }\n\n  searchShowByTitle(searchTerm: string): Observable<ShowSearchResults> {\n    return this.http.get<ShowSearchResults>(`api/shows/search/${searchTerm}`)\n  }\n\n  enrichShowInfo(imdb_id: string): Observable<EnrichedShowInfo> {\n    return this.http.get<EnrichedShowInfo>(`api/shows/enrich/${imdb_id}`)\n  }\n\n  findPreviewShowTorrents(imdb_id: string): Observable<PreviewShowTorrents> {\n    return this.http.get<PreviewShowTorrents>(`api/shows/find_preview_show_torrents/${imdb_id}`)\n  }\n\n  updateShowTorrents(imdb_id: string, updateTorrents: UpdateTorrents): Observable<ShowTorrents> {\n    return this.http.put<ShowTorrents>(`api/shows/update_torrents/${imdb_id}`, updateTorrents)\n  }\n\n  downloadEpisodeBestMatch(imdb_id: string, downloadEpisodeBestMatch: DownloadEpisodeBestMatch): Observable<ShowTorrents> {\n    return this.http.put<ShowTorrents>(`api/shows/download_current_best/${imdb_id}`, downloadEpisodeBestMatch)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {ShowsService} from \"../shows.service\";\nimport {ShowDetails} from \"../show\";\nimport {PanelBackgroundService} from \"../../panel/panel-background/panel-background.service\";\nimport {LoadingButtonStatus} from \"../../shared/loading-button/loading-button-status\";\nimport {Router} from \"@angular/router\"\nimport {Subject} from \"rxjs\";\n\n@Component({\n  selector: 'vestibule-show-details',\n  templateUrl: './show-details.component.html',\n  styleUrls: ['./show-details.component.scss']\n})\nexport class ShowDetailsComponent implements OnInit, OnDestroy {\n\n  showUpdated: Subject<void> = new Subject<void>();\n  imdb_id: any;\n  show: ShowDetails;\n\n  public updateShowInfoStatus = LoadingButtonStatus.idle\n  public findShowTorrentsStatus = LoadingButtonStatus.idle\n  public unsubscribeShowStatus = LoadingButtonStatus.idle\n\n  private sub: any;\n\n  constructor(private route: ActivatedRoute, private showsService: ShowsService,\n              private panelBackgroundService: PanelBackgroundService,\n              private router: Router) {}\n\n  ngOnInit(): void {\n    this.sub = this.route.params.subscribe(params => {\n      this.imdb_id = params['imdb_id']\n      this.showsService.showDetails(this.imdb_id).subscribe(\n        data => {\n          this.show = data\n          this.panelBackgroundService.changeBackground(this.show.thumbnail_link)\n        }\n      )\n    })\n  }\n\n  ngOnDestroy() {\n    this.panelBackgroundService.defaultBackground()\n    this.sub.unsubscribe();\n  }\n\n  resetMessagesAndStatus() {\n    this.updateShowInfoStatus = LoadingButtonStatus.idle\n    this.findShowTorrentsStatus = LoadingButtonStatus.idle\n    this.unsubscribeShowStatus = LoadingButtonStatus.idle\n  }\n\n  onUpdateShowInfo() {\n    this.resetMessagesAndStatus()\n    this.updateShowInfoStatus = LoadingButtonStatus.loading\n    this.showsService.updateShowInfo(this.imdb_id).subscribe(\n      data => {\n        this.show = data\n        this.updateShowInfoStatus = LoadingButtonStatus.idle\n        this.showUpdated.next()\n      },\n      error => {\n        this.updateShowInfoStatus = LoadingButtonStatus.error\n      }\n    )\n  }\n\n  onFindShowTorrents() {\n    this.resetMessagesAndStatus()\n    this.findShowTorrentsStatus = LoadingButtonStatus.loading\n    this.showsService.findShowTorrents(this.imdb_id).subscribe(\n      data => {\n        this.show = data\n        this.findShowTorrentsStatus = LoadingButtonStatus.idle\n      },\n      () => {\n        this.findShowTorrentsStatus = LoadingButtonStatus.error\n      }\n    )\n  }\n\n  onUnsubscribe() {\n    this.resetMessagesAndStatus()\n    this.unsubscribeShowStatus = LoadingButtonStatus.confirm\n  }\n\n  onUnsubscribeCancel() {\n    this.resetMessagesAndStatus()\n  }\n\n  onUnsubscribeConfirm() {\n    this.showsService.unsubscribeFromShow(this.imdb_id).subscribe(\n      data => {\n        this.router.navigate(['/shows'])\n      },\n      error => {\n        this.unsubscribeShowStatus = LoadingButtonStatus.error\n      }\n    )\n  }\n\n}\n","<ng-container *ngIf=\"show\">\n<p class=\"show-title\">{{show.title}}</p>\n\n<vestibule-show-details-tabs>\n\n  <vestibule-show-details-tab tabTitle=\"Status\" active=\"true\">\n    <p class=\"show-title-tags\">\n        <span *ngIf=\"show.year\"><span> {{ show.year }} </span><span class=\"bullet\">•</span></span>\n        <span *ngIf=\"show.network\"><span> {{ show.network }} </span><span class=\"bullet\">•</span></span>\n        <span *ngIf=\"show.number_of_seasons_as_int\"><span> {{ show.number_of_seasons_as_int | pluralPipe:'Season' }}</span></span>\n    </p>\n\n    <p class=\"show-status-line\">{{ show.status_line }}</p>\n    <p *ngIf=\"show.next_episode\" class=\"show-next-episode-line\">Next Episode: {{ show.next_episode }}</p>\n\n    <div class=\"show-imdb-link\">\n      <p><a href=\"{{show.imdb_url}}\" target=\"_blank\">IMDB</a> {{show.imdb_rating}}</p>\n    </div>\n  </vestibule-show-details-tab>\n\n  <vestibule-show-details-tab tabTitle=\"Episodes + Torrents\">\n    <vestibule-show-torrents [show]=\"show\" [showUpdated$]=\"showUpdated.asObservable()\"></vestibule-show-torrents>\n  </vestibule-show-details-tab>\n\n  <vestibule-show-details-tab tabTitle=\"Settings\">\n    <vestibule-show-profile [showProfile]=\"show.profile\" [showImdbID]=\"show.imdb_id\" [showCustomLookupNames]=\"show.custom_lookup_names\"></vestibule-show-profile>\n  </vestibule-show-details-tab>\n\n  <vestibule-show-details-tab tabTitle=\"Actions\">\n\n    <vestibule-loading-button>\n      <button (click)=\"onUpdateShowInfo()\"\n      [ngClass]=\"{\n        'loading': updateShowInfoStatus === 'loading',\n        'error': updateShowInfoStatus === 'error'\n      }\">Update Show Info</button>\n    </vestibule-loading-button>\n\n    <vestibule-loading-button>\n      <button (click)=\"onFindShowTorrents()\"\n      [ngClass]=\"{\n        'loading': findShowTorrentsStatus === 'loading',\n        'error': findShowTorrentsStatus === 'error'\n      }\">Find Show Torrents</button>\n    </vestibule-loading-button>\n\n    <div class=\"danger-zone-actions\">\n      <p>Danger Zone</p>\n      <vestibule-loading-button>\n        <button class=\"danger-zone-button\" (click)=\"onUnsubscribe()\">\n          Unsubscribe from Show</button>\n      </vestibule-loading-button>\n      <div *ngIf=\"unsubscribeShowStatus === 'confirm'\" class=\"danger-zone-confirm\">\n        <div class=\"danger-zone-text\">\n          <p>\n            This will delete all '{{this.show.title}}' Torrents and show info<br>\n            <b>Are you sure you want to unsubscribe?</b>\n          </p>\n        </div>\n        <button (click)=\"onUnsubscribeConfirm()\" class=\"danger-zone-confirm-yes\">Yes, unsubscribe</button>\n        <button (click)=\"onUnsubscribeCancel()\" class=\"danger-zone-confirm-cancel\">Cancel</button>\n      </div>\n    </div>\n\n  </vestibule-show-details-tab>\n\n</vestibule-show-details-tabs>\n</ng-container>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MoviesRoutingModule } from './movies-routing.module';\nimport { MoviesListComponent } from './movies-list/movies-list.component';\nimport {SharedModule} from \"../shared/shared.module\";\n\n\n@NgModule({\n  declarations: [MoviesListComponent],\n  imports: [\n    CommonModule,\n    MoviesRoutingModule,\n    SharedModule\n  ]\n})\nexport class MoviesModule { }\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PanelBackgroundService {\n\n  defaultBackgroundURL = \"/static/images/vestibule_default-13.jpg\"\n  private backgroundURL = new BehaviorSubject(this.defaultBackgroundURL);\n\n  currentBackground = this.backgroundURL.asObservable();\n\n  constructor() { }\n\n  changeBackground(url: string) {\n    this.backgroundURL.next(url)\n  }\n\n  defaultBackground() {\n    this.backgroundURL.next(\"\")\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FindRoutingModule } from './find-routing.module';\nimport { FindResultsComponent } from './find-results/find-results.component';\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { SharedModule } from \"../shared/shared.module\";\n\n@NgModule({\n  declarations: [FindResultsComponent],\n    imports: [\n        CommonModule,\n        SharedModule,\n        FindRoutingModule,\n        ReactiveFormsModule\n    ]\n})\nexport class FindModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Palette } from \"../interfaces/palette\";\n\n@Component({\n  selector: 'vestibule-poster-strip',\n  templateUrl: './poster-strip.component.html',\n  styleUrls: ['./poster-strip.component.scss']\n})\nexport class PosterStripComponent implements OnInit {\n  @Input() palette: Palette\n  @Input() width: string = '5rem'\n  public primaryColor: string\n  public lightColor: string\n  public darkColor: string\n  public secondaryColor: string\n  constructor() { }\n\n  ngOnInit(): void {\n    if (this.palette) {\n      this.primaryColor = `rgb(${this.palette.primary[0]}, ${this.palette.primary[1]}, ${this.palette.primary[2]})`\n      this.lightColor = `rgb(${this.palette.light[0]}, ${this.palette.light[1]}, ${this.palette.light[2]})`\n      this.darkColor = `rgb(${this.palette.dark[0]}, ${this.palette.dark[1]}, ${this.palette.dark[2]})`\n      if (this.palette.secondary) {\n        this.secondaryColor = `rgb(${this.palette.secondary[0]}, ${this.palette.secondary[1]}, ${this.palette.secondary[2]})`\n      }\n    } else {\n      this.primaryColor = `rgb(93, 108, 172)`\n      this.lightColor = `rgb(93, 108, 172)`\n      this.darkColor = `rgb(93, 108, 172)`\n      this.secondaryColor = `rgb(93, 108, 172)`\n    }\n  }\n\n  stripGradientBackground(): object {\n    return {\n      background: `linear-gradient(90deg, ${this.primaryColor} 0%, ${this.secondaryColor} 100%)`\n    }\n  }\n\n  stripStyle(): object {\n    return {\n      backgroundColor: this.primaryColor,\n      width: `${this.width}`\n    }\n  }\n}\n","<div class=\"poster-strip\" [ngStyle]=stripStyle()></div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { ShowsRoutingModule } from './shows-routing.module';\nimport { ShowsListComponent } from './shows-list/shows-list.component';\nimport { ShowDetailsComponent } from './show-details/show-details.component';\nimport { ShowDetailsTabComponent } from './show-details/show-details-tab/show-details-tab.component';\nimport { ShowDetailsTabsComponent } from './show-details/show-details-tabs/show-details-tabs.component';\nimport { ShowProfileComponent } from './show-profile/show-profile.component';\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { SharedModule } from \"../shared/shared.module\";\nimport { ShowTorrentsComponent } from './show-torrents/show-torrents.component';\nimport { ShowTorrentsSectionComponent } from './show-torrents/show-torrents-section/show-torrents-section.component';\nimport { ShowsStatusGroupComponent } from './shows-list/shows-status-group/shows-status-group.component';\n\n@NgModule({\n  declarations: [\n    ShowsListComponent,\n    ShowDetailsComponent,\n    ShowDetailsTabComponent,\n    ShowDetailsTabsComponent,\n    ShowProfileComponent,\n    ShowTorrentsComponent,\n    ShowTorrentsSectionComponent,\n    ShowsStatusGroupComponent,\n  ],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    SharedModule,\n    ShowsRoutingModule,\n    ReactiveFormsModule,\n  ]\n})\nexport class ShowsModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoadingButtonComponent } from './loading-button/loading-button.component';\nimport { ShowTorrentComponent } from \"./show-torrent/show-torrent.component\";\nimport { TorrentDownloadStatusComponent } from './torrent-download-status/torrent-download-status.component';\nimport { PluralPipePipe } from \"./pipes/plural-pipe.pipe\";\nimport { PosterStripComponent } from \"./poster-strip/poster-strip.component\";\n\n\n@NgModule({\n  declarations: [\n    PluralPipePipe,\n    LoadingButtonComponent,\n    ShowTorrentComponent,\n    TorrentDownloadStatusComponent,\n    PosterStripComponent\n  ],\n    exports: [\n      PluralPipePipe,\n      LoadingButtonComponent,\n      ShowTorrentComponent,\n      TorrentDownloadStatusComponent,\n      PosterStripComponent\n    ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class SharedModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ShowsService } from \"../shows/shows.service\";\nimport { ShowInUpcomingEpisodes } from \"../shows/show\";\n\n@Component({\n  selector: 'vestibule-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n  upcomingEpisodesShows: ShowInUpcomingEpisodes[]\n  showInPreview: ShowInUpcomingEpisodes\n\n  constructor(private showsService: ShowsService) { }\n\n  ngOnInit(): void {\n    this.showsService.listShowsByUpcomingEpisodes().subscribe(\n      data => {\n        this.upcomingEpisodesShows = data\n        this.showInPreview = this.upcomingEpisodesShows[0]\n      }\n    )\n  }\n}\n","<ng-container *ngIf=\"upcomingEpisodesShows.length else noShows\">\n  <vestibule-show-preview [previewShow]=\"showInPreview\"></vestibule-show-preview>\n\n  <div class=\"dashboard-model-wrapper\">\n    <p class=\"dashboard-model-title\">Upcoming Episodes</p>\n    <div class=\"dashboard-model-entries\">\n      <div *ngFor=\"let show of upcomingEpisodesShows\" (click)=\"showInPreview=show\">\n        <div class=\"dashboard-model-entry\">\n          <div class=\"show-data\">\n            <vestibule-poster-strip [palette]=\"show.palette_list\" [width]=\"'100%'\"></vestibule-poster-strip>\n            <p class=\"show-title\">{{show.title}}</p>\n            <div class=\"show-next-episode-line\">\n              <p>{{show.next_episode}}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-container>\n\n<ng-template #noShows>\n  <div class=\"no-shows\">\n    <p>This is where you'll see all the upcoming episodes for your subscribed Shows,</p>\n    <p>but it seems you don't have any subscriptions yet.</p>\n    <br/>\n    <p>Try finding a new show on <a [routerLink]=\"'/find/results'\">Find</a></p>\n  </div>\n</ng-template>\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from \"./authentication.service\";\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n\n  constructor(private authService: AuthenticationService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    request = request.clone({\n      setHeaders: {\n        'X-CSRFToken': this.authService.getCSRFToken()\n      }\n    });\n\n    return next.handle(request);\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'vestibule';\n}\n","<vestibule-panel></vestibule-panel>\n<div id=\"main-container\">\n  <router-outlet></router-outlet>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FindResultsComponent } from \"./find-results/find-results.component\";\n\nconst routes: Routes = [\n    { path: 'find/results', component: FindResultsComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FindRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TorrentsRoutingModule { }\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'vestibule-show-details-tab',\n  templateUrl: './show-details-tab.component.html',\n  styleUrls: ['./show-details-tab.component.scss']\n})\nexport class ShowDetailsTabComponent implements OnInit {\n  @Input('tabTitle') title: string;\n  @Input() active = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div [hidden]=\"!active\">\n  <ng-content></ng-content>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { MovieInList } from \"./interfaces/movie\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MoviesService {\n\n  constructor(private http: HttpClient) { }\n\n  listMovies(): Observable<MovieInList[]> {\n        return this.http.get<MovieInList[]>('api/movies/list')\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PanelComponent } from './panel/panel.component';\nimport { ServicesStatusComponent } from './panel/services-status/services-status.component';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from \"@angular/common/http\";\nimport { ShowsModule } from \"./shows/shows.module\";\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { CookieService } from \"ngx-cookie-service\";\nimport { TokenInterceptor } from \"./authentication/token.interceptor\";\nimport { TorrentsModule } from \"./torrents/torrents.module\";\nimport { FindModule } from \"./find/find.module\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { ShowPreviewComponent } from './dashboard/show-preview/show-preview.component';\nimport { SharedModule } from \"./shared/shared.module\";\nimport { OverlayModule } from \"@angular/cdk/overlay\";\nimport { MoviesModule } from \"./movies/movies.module\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PanelComponent,\n    ServicesStatusComponent,\n    DashboardComponent,\n    ShowPreviewComponent\n  ],\n    imports: [\n      BrowserModule,\n      ShowsModule,\n      MoviesModule,\n      FindModule,\n      TorrentsModule,\n      AppRoutingModule,\n      HttpClientModule,\n      ReactiveFormsModule,\n      SharedModule,\n      OverlayModule\n    ],\n  providers: [\n    CookieService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ServiceStatus } from \"./service-status\";\nimport { ServicesStatusService } from \"./services-status.service\";\n\n@Component({\n  selector: 'vestibule-services-status',\n  templateUrl: './services-status.component.html',\n  styleUrls: ['./services-status.component.scss']\n})\nexport class ServicesStatusComponent implements OnInit {\n\n  plexStatus: ServiceStatus;\n  transmissionStatus: ServiceStatus;\n\n  constructor(private servicesStatusService: ServicesStatusService) { }\n\n  ngOnInit(): void {\n    this.updateServicesStatus();\n  }\n\n  updateServicesStatus(): void {\n    this.servicesStatusService.getServicesStatus().subscribe(\n      data => {\n        this.plexStatus = data.services[\"plex\"];\n        this.transmissionStatus = data.services[\"transmission\"];\n      }\n    );\n  }\n}\n","<section id=\"services-status-box\">\n\n  <!--  Plex Status -->\n  <a class=\"service-wrap service-active\"\n     [ngClass]=\"{'service-up': plexStatus?.up, 'service-down': !plexStatus?.up}\"\n     target=\"_blank\" href=\"{{plexStatus?.url}}\">\n\n    <div class=\"service-status-bar\"></div>\n    <img class=\"service-icon\" alt=\"Plex is {{plexStatus?.up ? 'Up' : 'Down'}}\"\n         src=\"/static/images/plex_icon.svg\">\n  </a>\n\n  <!--  Transmission Status -->\n  <a class=\"service-wrap service-active\"\n     [ngClass]=\"{'service-up': transmissionStatus?.up, 'service-down': !transmissionStatus?.up}\"\n     target=\"_blank\" href=\"{{transmissionStatus?.url}}\">\n\n    <div class=\"service-status-bar\"></div>\n    <img class=\"service-icon\" alt=\"Transmission is {{transmissionStatus?.up ? 'Up' : 'Down'}}\"\n         src=\"/static/images/transmission_icon.svg\">\n  </a>\n\n</section>\n","export class TorrentDownloadStatus {\n  public static NEVER_STARTED = 'Never Started'\n  public static DOWNLOADING = 'Downloading'\n  public static READY = 'Ready'\n  public static STOPPED = 'Stopped'\n}\n\nexport interface ShowTorrentDetails {\n  torrentId?: number\n  showTitle: string\n  seasonNumber: string\n  episodeNumber?: string\n  publicationTime: string\n  feed: string\n  quality: string\n  sourceType: string\n  torrentTitle: string\n  torrentLink: string\n  isStandaloneTorrent: boolean\n  downloadStatus: string\n  percentDone: number\n}\n\nexport interface Torrent {\n  id: number\n  created: string\n  modified: string\n  link: string\n  title: string\n  feed: string\n  publication_time: string\n  source_type: string\n  quality: string\n  download_status: string\n  percent_done: number\n  profile_match_score: number\n  profile_match: boolean\n}\n\nexport interface TorrentDownloadResponse {\n  torrent: Torrent\n  message: string\n  successful: boolean\n}\n\nexport interface TorrentInList {\n  season: string\n  episode: string\n  id: number\n  created: string\n  modified: string\n  title: string\n  feed: string\n  publication_time: string\n  source_type: string\n  quality: string\n  download_status: string\n  percent_done: number\n  profile_match_score: number\n  profile_match: boolean\n}\n\nexport interface PreviewShowTorrent {\n  raw_title: string\n  link: string\n  publication_time: number\n  feed: string\n  show_title: string\n  season: string\n  episode: string\n  video_quality?: string\n  source?: string\n  other?: string\n  has_subtitles: boolean\n  full_season: boolean\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MoviesListComponent } from \"./movies-list/movies-list.component\";\n\nconst routes: Routes = [\n  { path: 'movies', component: MoviesListComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MoviesRoutingModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport {ShowInList} from \"../../show\";\n\n@Component({\n  selector: 'vestibule-shows-status-group',\n  templateUrl: './shows-status-group.component.html',\n  styleUrls: ['./shows-status-group.component.scss']\n})\nexport class ShowsStatusGroupComponent implements OnInit {\n\n  @Input() title: string\n  @Input() showList: ShowInList[]\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"show-list-group\">\n  <p class=\"show-list-status\" *ngIf=\"showList\">{{title}}</p>\n\n  <div class=\"show-list\">\n    <a *ngFor=\"let show of showList\" [routerLink]=\"['/shows', show.imdb_id]\">\n      <div class=\"show\">\n        <p class=\"show-title\">{{ show.title }}</p>\n        <vestibule-poster-strip [palette]=\"show.palette_list\"></vestibule-poster-strip>\n      </div>\n    </a>\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {ShowTorrentDetails, TorrentDownloadStatus} from \"../../torrents/torrent\";\nimport {TorrentsService} from \"../../torrents/torrents.service\";\nimport {ServicesStatusService} from \"../../panel/services-status/services-status.service\";\n\n@Component({\n  selector: 'vestibule-torrent-download-status',\n  templateUrl: './torrent-download-status.component.html',\n  styleUrls: ['./torrent-download-status.component.scss']\n})\nexport class TorrentDownloadStatusComponent implements OnInit {\n  @Input() set showTorrent(showTorrent: ShowTorrentDetails) {\n    if (!this.torrentChanged) {\n      this.torrent = showTorrent\n      this.updateTorrentStatus()\n    }\n  }\n\n  private torrentChanged = false\n  torrent: ShowTorrentDetails\n  canDownload = false\n  isDone = false\n  downloadSuccessful?: boolean\n  downloadMessage?: string\n  isDownloading = false\n  statusIconName: string\n\n  constructor(private torrentsService: TorrentsService, private servicesStatusService: ServicesStatusService) { }\n\n  ngOnInit(): void {\n    this.servicesStatusService.getServicesStatus().subscribe(\n      data => {\n        if (!data.services[\"transmission\"].up) {\n          this.downloadMessage = \"Transmission client seems to be down\"\n          this.canDownload = false\n        } else if (this.torrent.downloadStatus !== TorrentDownloadStatus.NEVER_STARTED) {\n          this.downloadMessage = \"Torrents is already active\"\n          this.canDownload = false\n        } else {\n          this.canDownload = true\n          this.downloadMessage = undefined\n        }\n      }\n    )\n  }\n\n  updateTorrentStatus(): void {\n    switch (this.torrent.downloadStatus) {\n      case TorrentDownloadStatus.STOPPED:\n        this.statusIconName = 'stopped'\n        this.isDone = true;\n        break\n      case TorrentDownloadStatus.READY:\n        this.statusIconName = 'upload'\n        this.isDone = true;\n        break\n      case TorrentDownloadStatus.DOWNLOADING:\n        this.statusIconName = 'download'\n        this.isDownloading = true\n        break\n      default:\n        this.statusIconName = 'download'\n    }\n  }\n\n  downloadTorrent(): void {\n    if (!this.canDownload) {\n      return\n    }\n\n    if (!this.torrent.isStandaloneTorrent) {\n      this.torrentsService.downloadShowTorrent(this.torrent.torrentId).subscribe(\n      data => {\n        this.torrentChanged = true\n        this.torrent.downloadStatus = data.torrent.download_status\n        this.torrent.percentDone = data.torrent.percent_done\n        this.updateTorrentStatus()\n        this.downloadMessage = data.message\n        this.downloadSuccessful = data.successful\n      },\n      error => {\n        this.downloadSuccessful = false\n        this.downloadMessage = error\n      }\n    )\n    }\n  }\n}\n","<div class=\"torrent-action action-download\"\n     [class]=\"{ download_disabled: !canDownload, downloading: isDownloading, done: isDone }\"\n     (click)=\"downloadTorrent()\">\n  <div class=\"icon-wrap\">\n    <img src=\"/static/images/{{statusIconName}}_icon.svg\">\n  </div>\n  <p class=\"download-status\" *ngIf=\"isDone\">{{torrent.downloadStatus}}</p>\n  <div class=\"download-progress\" *ngIf=\"isDownloading\">\n    <div class=\"bar\" style=\"width: {{torrent.percentDone}}%\"></div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ShowsService } from \"../shows.service\";\nimport { ShowInList } from \"../show\";\n\nclass ShowStatus {\n  public static CONTINUING = 'Continuing'\n  public static ENDED = 'Ended'\n  public static UPCOMING = 'Upcoming'\n}\n\n@Component({\n  selector: 'vestibule-shows-list',\n  templateUrl: './shows-list.component.html',\n  styleUrls: ['./shows-list.component.scss']\n})\nexport class ShowsListComponent implements OnInit {\n  continuingShows: ShowInList[]\n  upcomingShows: ShowInList[]\n  endedShows: ShowInList[]\n  showsByStatus: { [status: string] : ShowInList[] }\n  noShows = true;\n\n  constructor(private showsService: ShowsService) { }\n\n  ngOnInit(): void {\n    this.showsService.listShows().subscribe(\n      data => {\n        this.showsByStatus = this.groupShowsBy(data)\n        this.noShows = !Object.keys(this.showsByStatus).length;\n        this.continuingShows = this.showsByStatus[ShowStatus.CONTINUING]\n        this.upcomingShows = this.showsByStatus[ShowStatus.UPCOMING]\n        this.endedShows = this.showsByStatus[ShowStatus.ENDED]\n      }\n    )\n  }\n\n  groupShowsBy(showList: ShowInList[], key:string = 'status') {\n    return showList.reduce(function(rv, x) {\n      (rv[x[key]] = rv[x[key]] || []).push(x);\n      return rv;\n    }, {});\n  };\n}\n","<section id=\"shows-status-list\">\n  <div *ngIf=\"noShows\" class=\"no-shows\">\n    <p>This is where you'll find all the Shows you've subscribed to,</p>\n    <p>but it seems you don't have any subscriptions yet.</p>\n    <br/>\n    <p>Try finding a new show on <a [routerLink]=\"'/find/results'\">Find</a></p>\n  </div>\n\n  <vestibule-shows-status-group\n    [title]=\"'Continuing'\"\n    [showList]=\"continuingShows\">\n  </vestibule-shows-status-group>\n\n  <vestibule-shows-status-group\n    [title]=\"'Upcoming'\"\n    [showList]=\"upcomingShows\">\n  </vestibule-shows-status-group>\n\n  <vestibule-shows-status-group\n    [title]=\"'Ended'\"\n    [showList]=\"endedShows\">\n  </vestibule-shows-status-group>\n\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from \"@angular/forms\";\nimport { ShowsService } from \"../../shows/shows.service\";\nimport { EnrichedShowInfo, ShowSearchResult, ShowSearchResults } from \"../../shows/show\";\nimport { BehaviorSubject, interval, Observable, of, Subject } from \"rxjs\";\nimport { debounce, switchMap } from \"rxjs/operators\";\nimport { Router } from \"@angular/router\";\nimport { ShowTorrentDetails } from \"../../torrents/torrent\";\nimport { PanelBackgroundService } from \"../../panel/panel-background/panel-background.service\";\n\n@Component({\n  selector: 'vestibule-find-results',\n  templateUrl: './find-results.component.html',\n  styleUrls: ['./find-results.component.scss']\n})\nexport class FindResultsComponent implements OnInit {\n  searchResults: ShowSearchResult[] = []\n  searchOutput: Observable<ShowSearchResults>\n  term: string = ''\n  searchTerm = new Subject<string>()\n  searchTerm$ = this.searchTerm.asObservable()\n  loading = false\n  searchMode = true\n  previewShow?: ShowSearchResult\n  previewShowEnriched?: EnrichedShowInfo\n  previewShowTorrents?: ShowTorrentDetails[]\n  addLoading = false\n  addError = false\n  addAction?: string\n  resultsMessage = new BehaviorSubject<string>('');\n\n  findForm = this.fb.group({\n    term: ['', []]\n  })\n\n  constructor(private router: Router,\n              private fb: FormBuilder,\n              private showsService: ShowsService,\n              private panelBackgroundService: PanelBackgroundService) { }\n\n  ngOnInit(): void {\n    this.searchOutput = this.searchTerm$.pipe(\n      debounce(() => interval(600)),\n      switchMap((searchTerm: string) => {\n        if (searchTerm.length === 0) {\n          return of({ shows: { subscribed: [], unsubscribed: [] } })\n        }\n        this.loading = true\n        return this.showsService.searchShowByTitle(searchTerm);\n      }),\n    )\n    this.searchOutput.subscribe((data) => {\n      this.searchResults = data.shows.subscribed.concat(data.shows.unsubscribed)\n      if (this.searchResults.length === 1) {\n        this.previewShow = this.searchResults[0];\n        this.panelBackgroundService.changeBackground(this.previewShow.large_poster_path)\n      } else {\n        this.previewShow = undefined;\n        this.panelBackgroundService.defaultBackground()\n      }\n      this.loading = false\n      if (this.searchResults.length === 0) {\n        this.resultsMessage.next('Nothing found, try a different search')\n      } else {\n        this.resultsMessage.next('')\n      }\n    });\n\n    if (history.state.data?.term) {\n      this.findForm.controls['term'].setValue(history.state.data.term)\n      this.onSearchChange(history.state.data.term)\n    } else {\n      this.resultsMessage.next('Type to start a new search')\n    }\n  }\n\n  onSearchChange(searchTerm: string): void {\n    this.searchTerm.next(searchTerm)\n    if (searchTerm) {\n      this.resultsMessage.next('')\n    }\n  }\n\n  setPreviewShow(show: ShowSearchResult): void {\n    if (this.previewShow?.imdb_id === show.imdb_id) {\n      this.panelBackgroundService.defaultBackground()\n      this.previewShow = undefined\n      return\n    }\n\n    this.previewShow = show\n    this.previewShowEnriched = undefined\n    this.previewShowTorrents = undefined\n    this.panelBackgroundService.changeBackground(this.previewShow.large_poster_path)\n\n    this.showsService.enrichShowInfo(show.imdb_id).subscribe(\n      data => this.previewShowEnriched = data\n    )\n  }\n\n  getPosterStyle(show: ShowSearchResult): object {\n    const url = show.large_poster_path === 'http://image.tmdb.org/t/p/w500None' ? '/static/images/default_poster.svg' : show.large_poster_path;\n    return {\n      backgroundImage: `url('${url}')`\n    }\n  }\n\n  subscribeToShow(show: ShowSearchResult) {\n    if (show.subscribed) {\n      return\n    }\n\n    this.addLoading = true\n    this.addAction = 'Subscribing to show...'\n    this.showsService.subscribeToShow(show.imdb_id).subscribe(\n      data => {\n        this.addAction = 'Updating show info...'\n        this.showsService.updateShowInfo(data.imdb_id).subscribe(\n          data => {\n            this.addAction = 'Searching for torrents...'\n            this.showsService.findShowTorrents(data.imdb_id).subscribe(\n              data => {\n                this.addLoading = false\n                this.router.navigate(['/shows', data.imdb_id])\n              },\n              () => {\n                this.addLoading = false\n                this.router.navigate(['/shows', data.imdb_id])\n              }\n            )\n          },\n          () => {\n            this.addAction = `Failed to subscribe to update show info`\n            this.addLoading = false\n            this.addError = true\n          }\n        )\n      },\n      () => {\n        this.addAction = `Failed to subscribe to '${show.title}'`\n        this.addLoading = false\n        this.addError = true\n      }\n    )\n  }\n}\n","<form [formGroup]=\"findForm\" class=\"find-form\">\n  <img class=\"find-icon\" alt=\"Find\" src=\"/static/images/find_icon.svg\" [class.loading]=\"loading\">\n  <input\n    #searchInput\n    formControlName=\"term\"\n    placeholder=\"Find\"\n    (input)=\"onSearchChange($event.target.value)\"\n  >\n</form>\n\n<p class=\"result-message\" *ngIf=\"resultsMessage | async as resultsMsg\">{{ resultsMsg }}</p>\n\n<div class=\"search-results\" *ngIf=\"searchResults.length\">\n  <div class=\"results\">\n    <div *ngFor=\"let result of searchResults\"\n         class=\"search-result-wrapper\"\n         (click)=\"setPreviewShow(result)\"\n         [ngClass]=\"{selected: result === previewShow, subscribed: result.subscribed}\">\n      <div class=\"poster-preview\">\n        <div class=\"poster-wrapper\" [ngStyle]=\"getPosterStyle(result)\"></div>\n        <div class=\"data\">\n          <div *ngIf=\"result.subscribed\" class=\"subscribed-mark\"></div>\n          <p class=\"year\">\n            <span>{{result.year}}</span>\n          </p>\n          <p class=\"show-title\">{{result.title}}</p>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div id=\"preview-selected-show\" *ngIf=\"previewShow\">\n  <div class=\"data\">\n    <p class=\"title\">{{previewShow.title}}</p>\n\n    <p class=\"show-title-tags\">\n      <span *ngIf=\"previewShow.year\"><span> {{ previewShow.year }} </span><span class=\"bullet\">•</span></span>\n      <span *ngIf=\"previewShow.network\"><span> {{ previewShow.network }} </span><span class=\"bullet\">•</span></span>\n      <span *ngIf=\"previewShow.number_of_seasons\"><span> {{ previewShow.number_of_seasons | pluralPipe:'Season' }}</span></span>\n    </p>\n\n    <p class=\"show-status-line\">{{ previewShow.status }}</p>\n\n    <div class=\"show-imdb-link\">\n      <p><a href=\"{{ previewShow.imdb_link }}\" target=\"_blank\">IMDB</a></p>\n    </div>\n\n    <div class=\"show-actions\">\n        <ng-container *ngIf=\"!previewShow.subscribed else subscribed\">\n          <p class=\"action subscription\" (click)=\"subscribeToShow(previewShow)\">Subscribe</p>\n          <span class=\"add-action\" *ngIf=\"addAction\">{{addAction}}</span>\n        </ng-container>\n        <ng-template #subscribed>\n          <a [routerLink]=\"['/shows', previewShow.imdb_id]\">\n            <p class=\"action subscription\">See Subscription</p>\n          </a>\n        </ng-template>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TorrentsRoutingModule } from './torrents-routing.module';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    TorrentsRoutingModule\n  ]\n})\nexport class TorrentsModule { }\n","import {Component, Input, OnInit} from '@angular/core';\nimport {ShowInUpcomingEpisodes} from \"../../shows/show\";\nimport {PanelBackgroundService} from \"../../panel/panel-background/panel-background.service\";\nimport {ShowTorrentDetails, TorrentInList} from \"../../torrents/torrent\";\n\n@Component({\n  selector: 'vestibule-show-preview',\n  templateUrl: './show-preview.component.html',\n  styleUrls: ['./show-preview.component.scss']\n})\nexport class ShowPreviewComponent implements OnInit {\n  @Input() set previewShow(newShow: ShowInUpcomingEpisodes) {\n    this.show = newShow\n    if (this.show) {\n      this.panelBackgroundService.changeBackground(this.show.poster_link)\n      this.primaryColor = `rgb(${this.show.palette_list.primary.join(',')})`\n    } else {\n      this.panelBackgroundService.defaultBackground()\n      this.primaryColor = undefined;\n    }\n  }\n\n  primaryColor: string;\n  show: ShowInUpcomingEpisodes;\n\n  get color(): string {\n    return `rgb(${this.show.palette_list.primary[0]}, ${this.show.palette_list.primary[1]}, ${this.show.palette_list.primary[2]})`\n  }\n  constructor(private panelBackgroundService: PanelBackgroundService) { }\n\n  ngOnInit(): void {\n  }\n\n  torrentToShowTorrent(torrent: TorrentInList): ShowTorrentDetails {\n    return {\n      torrentId: torrent.id,\n      showTitle: this.show.title,\n      seasonNumber: torrent.season,\n      episodeNumber: torrent.episode,\n      publicationTime: torrent.publication_time,\n      feed: torrent.feed,\n      quality: torrent.quality,\n      sourceType: torrent.source_type,\n      torrentTitle: torrent.title,\n      torrentLink: torrent.title,\n      isStandaloneTorrent: false,\n      downloadStatus: torrent.download_status,\n      percentDone: torrent.percent_done\n    }\n  }\n}\n","<div id=\"preview-wrap\">\n  <div class=\"poster-wrap\" style=\"background-color: {{primaryColor}}\">\n    <div *ngIf=\"show?.poster_link\" class=\"poster\" style=\"background-image: url('{{show.poster_link}}')\"></div>\n  </div>\n\n  <div class=\"details-wrap\">\n    <p class=\"show-title\">{{show.title}}</p>\n\n    <div class=\"details\">\n      <div class=\"status\">\n        <p class=\"next-episode-line\">{{show.next_episode}}</p>\n        <p class=\"season-status-line\">{{show.next_episode_season_status}}</p>\n\n        <a class=\"subscription-link\" [routerLink]=\"['/shows', show.imdb_id]\" style=\"border-bottom: 3px solid {{primaryColor}}\">See Subscription</a>\n      </div>\n\n      <div class=\"torrents\">\n        <div *ngFor=\"let torrent of show.recent_torrents_active\" class=\"torrent-wrap\">\n          <p class=\"title\">S{{torrent.season}} E{{torrent.episode}}</p>\n          <vestibule-torrent-download-status [showTorrent]=\"torrentToShowTorrent(torrent)\"></vestibule-torrent-download-status>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { TorrentDownloadResponse, Torrent } from \"./torrent\";\nimport { Observable } from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TorrentsService {\n\n  constructor(private http: HttpClient) { }\n\n  downloadShowTorrent(torrentID: number): Observable<TorrentDownloadResponse> {\n    return this.http.get<TorrentDownloadResponse>(`api/torrents/download/${torrentID}`)\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ShowsListComponent } from \"./shows-list/shows-list.component\";\nimport { ShowDetailsComponent } from \"./show-details/show-details.component\";\n\nconst routes: Routes = [\n  { path: 'shows', component: ShowsListComponent },\n  { path: 'shows/:imdb_id', component: ShowDetailsComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ShowsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {DashboardComponent} from \"./dashboard/dashboard.component\";\n\nconst routes: Routes = [\n  {path: 'dashboard', component: DashboardComponent},\n  {path: '', redirectTo: 'dashboard', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, Input } from '@angular/core';\nimport { ShowTorrentDetails } from \"../../torrents/torrent\";\n\n@Component({\n  selector: 'vestibule-show-torrent',\n  templateUrl: './show-torrent.component.html',\n  styleUrls: ['./show-torrent.component.scss']\n})\nexport class ShowTorrentComponent {\n  @Input() set showTorrent(showTorrent: ShowTorrentDetails) {\n    this.torrent = showTorrent\n  }\n  torrent: ShowTorrentDetails\n  moreDetailsMode = false\n\n  constructor() { }\n\n  toggleMoreDetails(): void {\n    this.moreDetailsMode = !this.moreDetailsMode\n  }\n}\n","<div class=\"torrent-cont\">\n  <div class=\"torrent-title-cont\">\n    <p>\n      <span class=\"torrent-title\">{{torrent.showTitle}} S{{torrent.seasonNumber}}<span *ngIf=\"torrent.episodeNumber\"> E{{torrent.episodeNumber}}</span></span>\n      <span class=\"torrent-publication-time\">{{torrent.publicationTime}}</span>\n    </p>\n  </div>\n\n  <div class=\"torrent-details-cont\">\n    <div class=\"torrent-actions-cont\">\n      <vestibule-torrent-download-status [showTorrent]=\"torrent\"></vestibule-torrent-download-status>\n    </div>\n\n    <div class=\"torrent-info-cont\">\n      <div class=\"torrent-tags\">\n        <div *ngIf=\"torrent.feed\" class=\"tag feed-tag\">{{torrent.feed}}</div>\n        <div *ngIf=\"torrent.sourceType\" class=\"tag source-type-tag\">{{torrent.sourceType}}</div>\n      </div>\n\n      <div *ngIf=\"!moreDetailsMode else moreDetails\"\n           class=\"torrent-base-details-cont\" (click)=\"toggleMoreDetails()\">\n        <div class=\"torrent-action action-plus\">\n          <img src=\"/static/images/plus_icon.svg\" [class.x-mode]=\"moreDetailsMode\">\n        </div>\n        <div class=\"torrent-tags\">\n          <div *ngIf=\"torrent.quality\" class=\"tag quality-tag\">{{torrent.quality}}</div>\n        </div>\n      </div>\n\n      <ng-template #moreDetails>\n        <div class=\"torrent-more-details-cont\">\n          <div class=\"torrent-tags\">\n            <div *ngIf=\"torrent.torrentLink\" class=\"tag torrent-link\">\n              <a target=\"_blank\" href=\"{{torrent.torrentLink}}\">Link</a>\n            </div>\n            <div *ngIf=\"torrent.torrentTitle\" class=\"tag torrent-full-name\">{{torrent.torrentTitle}}</div>\n          </div>\n        </div>\n      </ng-template>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MoviesService } from \"../movies.service\";\nimport { MovieInList } from \"../interfaces/movie\";\n\n@Component({\n  selector: 'vestibule-movies-list',\n  templateUrl: './movies-list.component.html',\n  styleUrls: ['./movies-list.component.scss']\n})\nexport class MoviesListComponent implements OnInit {\n  movies: MovieInList[] = []\n\n  constructor(private moviesService: MoviesService) { }\n\n  ngOnInit(): void {\n    this.moviesService.listMovies().subscribe(\n      data => {\n        this.movies = data\n      }\n    )\n  }\n}\n","<div class=\"movie-list\">\n  <div *ngFor=\"let movie of movies\" class=\"movie\">\n    <div class=\"poster-wrap\">\n      <div *ngIf=\"movie?.poster_link\" class=\"poster\" style=\"background-image: url('{{movie.poster_link}}')\"></div>\n    </div>\n    <vestibule-poster-strip [width]=\"'10rem'\" [palette]=\"movie.palette_list\"></vestibule-poster-strip>\n    <p class=\"year\">{{ movie.year }}</p>\n    <p class=\"title\">{{ movie.title }}</p>\n  </div>\n</div>\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { Component, Input, OnChanges, OnInit} from '@angular/core';\nimport { Episode, Season, ShowDetails } from \"../../show\";\nimport { ShowTorrentDetails, Torrent } from \"../../../torrents/torrent\";\n\n@Component({\n  selector: 'vestibule-show-torrents-section',\n  templateUrl: './show-torrents-section.component.html',\n  styleUrls: ['./show-torrents-section.component.scss']\n})\nexport class ShowTorrentsSectionComponent implements OnInit, OnChanges {\n\n  @Input() title: string\n  @Input() defaultOpen = false\n  @Input() matchingTorrents: boolean\n  @Input() torrents: Torrent[]\n  @Input() show: ShowDetails\n  @Input() season: Season\n  @Input() episode?: Episode\n\n  public openList: boolean\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.openList = this.defaultOpen\n  }\n\n  ngOnChanges(): void {\n    this.openList = this.defaultOpen\n  }\n\n  toggleListOpen(): void {\n    this.openList = !this.openList\n  }\n\n  torrentsDetails(): ShowTorrentDetails[] {\n    return this.torrents.map((torrent) => {\n      return {\n        torrentId: torrent.id,\n        torrentTitle: torrent.title,\n        showTitle: this.show.title,\n        seasonNumber: `${this.season.number}`,\n        episodeNumber: this.episode ? `${this.episode.number}` : '',\n        publicationTime: torrent.publication_time,\n        feed: torrent.feed,\n        quality: torrent.quality,\n        sourceType: torrent.source_type,\n        torrentLink: torrent.link,\n        isStandaloneTorrent: false,\n        downloadStatus: torrent.download_status,\n        percentDone: torrent.percent_done\n      }\n    })\n  }\n}\n","<ng-container *ngIf=\"torrents.length\">\n  <div class=\"torrents-section-header\">\n    <p (click)=\"toggleListOpen()\">{{ title }}\n      <span [class.matching-torrents]=matchingTorrents class=\"torrents-count\">{{torrents.length}}</span>\n      <span class=\"list-action\"> {{openList ? 'Hide' : 'Show'}}</span>\n    </p>\n  </div>\n  <div class=\"torrents-section-list\" *ngIf=\"openList\">\n    <div *ngFor=\"let torrent of torrentsDetails()\" class=\"torrent-cont\">\n      <vestibule-show-torrent [showTorrent]=\"torrent\"></vestibule-show-torrent>\n    </div>\n  </div>\n</ng-container>\n"],"sourceRoot":"webpack:///"}