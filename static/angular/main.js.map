{"version":3,"sources":["./src/app/shows/shows-list.component.ts","./src/app/shows/shows-list.component.html","./src/app/panel/services-status/services-status.service.ts","./src/app/panel/panel.component.ts","./src/app/panel/panel.component.html","./src/app/shows/shows.service.ts","./src/app/shows/poster-strip/poster-strip.component.ts","./src/app/shows/poster-strip/poster-strip.component.html","./src/environments/environment.ts","./src/app/shows/shows.module.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/panel/services-status/services-status.component.ts","./src/app/panel/services-status/services-status.component.html","./src/app/shows/shows-routing.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {ShowsService} from \"./shows.service\";\nimport {ShowInList} from \"./show\";\n\n@Component({\n  selector: 'vestibule-shows-list',\n  templateUrl: './shows-list.component.html',\n  styleUrls: ['./shows-list.component.scss']\n})\nexport class ShowsListComponent implements OnInit {\n  shows: ShowInList[]\n  constructor(private showsService: ShowsService) { }\n\n  ngOnInit(): void {\n    this.showsService.listShows().subscribe(\n      data => this.shows = data\n    )\n  }\n\n}\n","<section id=\"show-list\">\n\n    <a *ngFor=\"let show of shows\" [routerLink]=\"shows\"><div class=\"show\">\n        <p class=\"show-title\">{{ show.title }}</p>\n        <vestibule-poster-strip [paletteList]=\"show.palette_list\"></vestibule-poster-strip>\n    </div></a>\n\n</section>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {ServiceStatus} from \"./service-status\";\nimport {Observable} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServicesStatusService {\n\n  constructor(private http: HttpClient) { }\n\n  getServicesStatus(): Observable<ServiceStatus[]> {\n    return this.http.get<ServiceStatus[]>('api/services-status')\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'vestibule-panel',\n  templateUrl: './panel.component.html',\n  styleUrls: ['./panel.component.scss']\n})\nexport class PanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section id=\"panel\">\n\n  <div id=\"vestibule-home\">\n    <a [routerLink]=\"'/dashboard'\" class=\"acier-title\">VESTIBULE</a>\n  </div>\n\n  <div id=\"main-links-box\">\n\n      <section class=\"side-panel-links\">\n          <a [routerLink]=\"'/shows'\" class=\"side-panel-link\">Shows</a>\n          <a href=\"/\" class=\"side-panel-link\">Feeds</a>\n          <a href=\"/\" class=\"side-panel-link\">Torrents</a>\n      </section>\n\n      <div class=\"side-panel-divider\"></div>\n\n      <section class=\"side-panel-links\">\n          <a href=\"/\" class=\"side-panel-link\">Add Show</a>\n      </section>\n\n  </div>\n\n  <vestibule-services-status></vestibule-services-status>\n\n</section>\n\n<div id=\"strip\">\n  <img alt=\"Vestibule\" id=\"strip-img\" src=\"/static/images/vestibule_default-13.jpg\" crossorigin=\"anonymous\">\n  <div id=\"strip-cover\"></div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {ShowInList} from \"./show\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShowsService {\n\n  constructor(private http: HttpClient) { }\n\n  listShows(): Observable<ShowInList[]> {\n    return this.http.get<ShowInList[]>('api/shows/list')\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'vestibule-poster-strip',\n  templateUrl: './poster-strip.component.html',\n  styleUrls: ['./poster-strip.component.scss']\n})\nexport class PosterStripComponent implements OnInit {\n  @Input() paletteList: number[][]\n  public mainColor: string\n  constructor() { }\n\n  ngOnInit(): void {\n    if (this.paletteList.length) {\n      this.mainColor = `rgb(${this.paletteList[0][0]}, ${this.paletteList[0][1]}, ${this.paletteList[0][2]})`\n    } else {\n      this.mainColor = `rgb(93, 108, 172)`\n    }\n  }\n\n}\n","<div class=\"poster-strip\" [ngStyle]=\"{backgroundColor: mainColor}\"></div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ShowsRoutingModule } from './shows-routing.module';\nimport { ShowsListComponent } from './shows-list.component';\nimport { PosterStripComponent } from './poster-strip/poster-strip.component';\n\n\n@NgModule({\n  declarations: [ShowsListComponent, PosterStripComponent],\n  imports: [\n    CommonModule,\n    ShowsRoutingModule\n  ]\n})\nexport class ShowsModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'vestibule-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>dashboard works!</p>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'vestibule';\n}\n","<vestibule-panel></vestibule-panel>\n<div id=\"main-container\">\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PanelComponent } from './panel/panel.component';\nimport { ServicesStatusComponent } from './panel/services-status/services-status.component';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport {ShowsModule} from \"./shows/shows.module\";\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PanelComponent,\n    ServicesStatusComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    ShowsModule,\n    AppRoutingModule,\n    HttpClientModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ServiceStatus} from \"./service-status\";\nimport {interval, Subscription} from \"rxjs\";\nimport {ServicesStatusService} from \"./services-status.service\";\n\n@Component({\n  selector: 'vestibule-services-status',\n  templateUrl: './services-status.component.html',\n  styleUrls: ['./services-status.component.scss']\n})\nexport class ServicesStatusComponent implements OnInit, OnDestroy{\n\n  plexStatus: ServiceStatus;\n  transmissionStatus: ServiceStatus;\n  private statusUpdater: Subscription\n\n  constructor(private servicesStatusService: ServicesStatusService) { }\n\n  ngOnInit(): void {\n    this.updateServicesStatus();\n    this.statusUpdater = interval(10000).subscribe(\n      () => this.updateServicesStatus())\n  }\n\n  updateServicesStatus(): void {\n    this.servicesStatusService.getServicesStatus().subscribe(\n      data => {\n        this.plexStatus = data[\"services\"][\"plex\"];\n        this.transmissionStatus = data[\"services\"][\"transmission\"];\n      }\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.statusUpdater.unsubscribe();\n  }\n}\n","<section id=\"services-status-box\">\n\n  <!--  Plex Status -->\n  <a class=\"service-wrap service-active\"\n     [ngClass]=\"{'service-up': plexStatus?.up, 'service-down': !plexStatus?.up}\"\n     target=\"_blank\" href=\"{{plexStatus?.url}}\">\n\n    <div class=\"service-status-bar\"></div>\n    <img class=\"service-icon\" alt=\"Plex is {{plexStatus?.up ? 'Up' : 'Down'}}\"\n         src=\"/static/images/plex_icon.svg\">\n  </a>\n\n  <!--  Transmission Status -->\n  <a class=\"service-wrap service-active\"\n     [ngClass]=\"{'service-up': transmissionStatus?.up, 'service-down': !transmissionStatus?.up}\"\n     target=\"_blank\" href=\"{{transmissionStatus?.url}}\">\n\n    <div class=\"service-status-bar\"></div>\n    <img class=\"service-icon\" alt=\"Transmission is {{transmissionStatus?.up ? 'Up' : 'Down'}}\"\n         src=\"/static/images/transmission_icon.svg\">\n  </a>\n\n</section>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {ShowsListComponent} from \"./shows-list.component\";\n\nconst routes: Routes = [\n  {path: 'shows', component: ShowsListComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ShowsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {DashboardComponent} from \"./dashboard/dashboard.component\";\n\nconst routes: Routes = [\n  {path: 'dashboard', component: DashboardComponent},\n  {path: '', redirectTo: 'dashboard', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}